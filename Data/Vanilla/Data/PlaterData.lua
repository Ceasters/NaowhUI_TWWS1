local NUI = unpack(NaowhUI)

NUI.PlaterData = {
	["aura_breakline_space"] = 15,
	["script_data"] = {
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
	["Time"] = 1604599472,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
	["Enabled"] = true,
	["Revision"] = 355,
	["semver"] = "",
	["Author"] = "Izimode-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option6",
	["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
	["Name"] = "Option 6",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "changeNameplateColor",
	["Value"] = true,
	["Name"] = "Change Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "change to true to change the color",
	},
	{
	["Type"] = 1,
	["Key"] = "nameplateColor",
	["Value"] = {
	1,
	0,
	0.52549019607843,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 6,
	["Desc"] = "increase the nameplate height by this value",
	["Min"] = 0,
	["Key"] = "nameplateSizeOffset",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Nameplate Size Offset",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotsColor",
	["Value"] = {
	1,
	0.71372549019608,
	0,
	1,
	},
	["Name"] = "Dot Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option10",
	["Value"] = "Skull Texture",
	["Name"] = "Skull Texture",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "skullColor",
	["Value"] = {
	1,
	0.46274509803922,
	0,
	1,
	},
	["Name"] = "Skull Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "",
	["Min"] = 0,
	["Key"] = "skullAlpha",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Alpha",
	},
	{
	["Type"] = 2,
	["Max"] = 2,
	["Desc"] = "",
	["Min"] = 0.4,
	["Key"] = "skullScale",
	["Value"] = 0.6,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Scale",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
	["SpellIds"] = {
	},
	["Name"] = "Unit - Important [Plater]",
	["NpcNames"] = {
	"164362",
	"168882",
	"168988",
	"170234",
	"165905",
	"170452",
	80875,
	163746,
	152033,
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
	["OptionsValues"] = {
	},
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
	["Time"] = 1669327144,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
	["Enabled"] = true,
	["Revision"] = 632,
	["semver"] = "",
	["Author"] = "Tercioo-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option3",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "glowEnabled",
	["Value"] = false,
	["Name"] = "Glow Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "glowColor",
	["Value"] = {
	0.40392156862745,
	0.003921568627451,
	0,
	1,
	},
	["Name"] = "Glow Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option3",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "dotsEnabled",
	["Value"] = true,
	["Name"] = "Dots Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotsColor",
	["Value"] = {
	1,
	0.32156862745098,
	0,
	1,
	},
	["Name"] = "Dots Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Add the buff name in the trigger box.",
	["SpellIds"] = {
	398151,
	323149,
	324392,
	340544,
	342189,
	333227,
	163689,
	227931,
	233210,
	300207,
	301629,
	297133,
	377738,
	378149,
	},
	["Name"] = "Aura - Buff Alert [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
	["Time"] = 1673994690,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
	["Enabled"] = true,
	["Revision"] = 828,
	["semver"] = "",
	["Author"] = "Bombad o-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Plays a big animation when the cast start.",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Option 4",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Flash:",
	["Name"] = "Flash",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1.2,
	["Desc"] = "How long is the flash played when the cast starts.",
	["Min"] = 0.1,
	["Key"] = "flashDuration",
	["Value"] = 0.8,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Flash Duration",
	},
	{
	["Type"] = 1,
	["Key"] = "flashColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Flash Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the Flash",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Shake:",
	["Name"] = "Shake",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 0.5,
	["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
	["Min"] = 0.1,
	["Key"] = "shakeDuration",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "How strong is the shake.",
	["Min"] = 1,
	["Key"] = "shakeAmplitude",
	["Value"] = 5,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Amplitude",
	},
	{
	["Type"] = 2,
	["Max"] = 80,
	["Desc"] = "How fast the shake moves.",
	["Min"] = 1,
	["Key"] = "shakeFrequency",
	["Value"] = 40,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Frequency",
	},
	{
	["Type"] = 6,
	["Key"] = "option13",
	["Value"] = 0,
	["Name"] = "Option 13",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option14",
	["Value"] = "Dot Animation:",
	["Name"] = "Dot Animation",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotColor",
	["Value"] = {
	0.56470588235294,
	0.56470588235294,
	0.56470588235294,
	1,
	},
	["Name"] = "Dot Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Adjust the color of the dots around the nameplate",
	},
	{
	["Type"] = 2,
	["Max"] = 20,
	["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
	["Min"] = -10,
	["Key"] = "xOffset",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot X Offset",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
	["Min"] = -10,
	["Key"] = "yOffset",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot Y Offset",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option19",
	["Value"] = "Cast Bar",
	["Name"] = "Option 19",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useCastbarColor",
	["Value"] = true,
	["Name"] = "Use Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Use cast bar color.",
	},
	{
	["Type"] = 1,
	["Key"] = "castBarColor",
	["Value"] = {
	0.41176470588235,
	1,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Cast bar color.",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
	["SpellIds"] = {
	373046,
	372863,
	164686,
	153072,
	153680,
	196497,
	388886,
	387145,
	384365,
	152964,
	398150,
	152801,
	397878,
	397914,
	183263,
	3636,
	376171,
	350687,
	321247,
	334522,
	320232,
	319962,
	325879,
	324427,
	322999,
	325360,
	322903,
	324103,
	333294,
	333540,
	319521,
	326021,
	326450,
	322711,
	329104,
	295000,
	242391,
	320197,
	329608,
	161090,
	156301,
	166341,
	163379,
	166923,
	172952,
	164426,
	163665,
	227578,
	228528,
	227789,
	227779,
	229608,
	227925,
	300129,
	296522,
	294349,
	293854,
	297834,
	299588,
	302682,
	291946,
	295169,
	285440,
	291613,
	283551,
	372735,
	373017,
	392488,
	257732,
	256060,
	257899,
	384633,
	374339,
	395694,
	391634,
	372701,
	369328,
	265487,
	413044,
	183526,
	88194,
	87762,
	413385,
	411001,
	378282,
	384161,
	259572,
	255371,
	427460,
	429172,
	426500,
	413607,
	412922,
	417481,
	201399,
	411994,
	415770,
	260907,
	260703,
	260741,
	265876,
	263959,
	266225,
	253517,
	377488,
	},
	["Name"] = "Cast - Very Important [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
	["Time"] = 1670201853,
	["url"] = "",
	["Icon"] = 2175503,
	["Enabled"] = false,
	["Revision"] = 533,
	["semver"] = "",
	["Author"] = "Bombad o-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 2,
	["Max"] = 6,
	["Desc"] = "Increases the cast bar height by this value",
	["Min"] = 0,
	["Key"] = "castBarHeight",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Bar Height Mod",
	},
	{
	["Type"] = 1,
	["Key"] = "castBarColor",
	["Value"] = {
	1,
	0.5843137254902,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Changes the cast bar color to this one.",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option6",
	["Value"] = "Arrow:",
	["Name"] = "Arrow:",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "showArrow",
	["Value"] = true,
	["Name"] = "Show Arrow",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Arrow alpha.",
	["Min"] = 0,
	["Key"] = "arrowAlpha",
	["Value"] = 1,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Arrow Alpha",
	},
	{
	["Type"] = 2,
	["Max"] = 12,
	["Desc"] = "Arrow Width.",
	["Min"] = 4,
	["Key"] = "arrowWidth",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Arrow Width",
	},
	{
	["Type"] = 2,
	["Max"] = 12,
	["Desc"] = "Arrow Height.",
	["Min"] = 4,
	["Key"] = "arrowHeight",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Arrow Height",
	},
	{
	["Type"] = 6,
	["Key"] = "option13",
	["Value"] = 0,
	["Name"] = "Option 13",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option12",
	["Value"] = "Dot Animation:",
	["Name"] = "Dot Animation:",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotColor",
	["Value"] = {
	1,
	0.6156862745098,
	0,
	1,
	},
	["Name"] = "Dot Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Adjust the color of the dot animation.",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Dot X Offset",
	["Min"] = -10,
	["Key"] = "xOffset",
	["Value"] = 4,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot X Offset",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Dot Y Offset",
	["Min"] = -10,
	["Key"] = "yOffset",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot Y Offset",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "Option 18",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option17",
	["Value"] = "Nameplate Color",
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useNameplateColor",
	["Value"] = false,
	["Name"] = "Change Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Change Nameplate Color",
	},
	{
	["Type"] = 1,
	["Key"] = "healthBarColor",
	["Value"] = {
	1,
	0.1843137294054,
	0,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Health Bar Color",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
	["SpellIds"] = {
	240446,
	385339,
	198077,
	210261,
	360857,
	273577,
	389446,
	},
	["Name"] = "Explosion Affix M+ [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
	["Time"] = 1669327144,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
	["Enabled"] = true,
	["Revision"] = 368,
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option3",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "glowEnabled",
	["Value"] = false,
	["Name"] = "Glow Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "glowColor",
	["Value"] = {
	0.40392156862745,
	0.003921568627451,
	0,
	1,
	},
	["Name"] = "Glow Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option3",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "dotsEnabled",
	["Value"] = true,
	["Name"] = "Dots Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotsColor",
	["Value"] = {
	1,
	0.32156862745098,
	0,
	1,
	},
	["Name"] = "Dots Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	},
	["Author"] = "Tercioo-Sylvanas",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	337220,
	337253,
	337251,
	},
	["Desc"] = "Add the debuff name in the trigger box.",
	["Name"] = "Aura - Debuff Alert [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
	["Time"] = 1670203603,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
	["Enabled"] = true,
	["Revision"] = 1194,
	["semver"] = "",
	["Author"] = "Tercioo-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option3",
	["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 3",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useCastbarColor",
	["Value"] = true,
	["Name"] = "Cast Bar Color Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "When enabled, changes the cast bar color,",
	},
	{
	["Type"] = 1,
	["Key"] = "castbarColor",
	["Value"] = {
	1,
	0.43137254901961,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the cast bar.",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
	["Min"] = 0.05,
	["Key"] = "flashDuration",
	["Value"] = 0.4,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Flash Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Increases the cast bar height by this value",
	["Min"] = 0,
	["Key"] = "castBarHeight",
	["Value"] = 5,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Bar Height Mod",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
	["Min"] = 0.1,
	["Key"] = "shakeDuration",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 100,
	["Desc"] = "How strong is the shake.",
	["Min"] = 2,
	["Key"] = "shakeAmplitude",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Amplitude",
	},
	{
	["Type"] = 2,
	["Max"] = 80,
	["Desc"] = "How fast the shake moves.",
	["Min"] = 1,
	["Key"] = "shakeFrequency",
	["Value"] = 40,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Frequency",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
	["SpellIds"] = {
	396640,
	372743,
	377389,
	396812,
	388392,
	387955,
	386546,
	377503,
	384808,
	386024,
	387615,
	387606,
	225100,
	211401,
	211470,
	215433,
	192563,
	198959,
	152818,
	156776,
	398206,
	153524,
	396073,
	396018,
	345202,
	377950,
	372223,
	338353,
	334748,
	334749,
	320784,
	341352,
	341520,
	341522,
	336005,
	339777,
	331933,
	326617,
	324914,
	324776,
	326046,
	340634,
	319070,
	328295,
	317936,
	327413,
	319654,
	323821,
	320772,
	324293,
	330562,
	330868,
	341902,
	342139,
	342675,
	323190,
	332836,
	327648,
	328217,
	322938,
	340544,
	325876,
	325700,
	323552,
	332666,
	332612,
	332706,
	340026,
	294171,
	292910,
	294165,
	338871,
	330813,
	335694,
	327461,
	329787,
	304946,
	15245,
	276754,
	304831,
	277036,
	320657,
	294362,
	270248,
	292926,
	350421,
	352158,
	349985,
	329239,
	328400,
	164192,
	176032,
	166335,
	166387,
	162066,
	163689,
	227592,
	228254,
	227999,
	227987,
	232115,
	29580,
	227616,
	241828,
	228606,
	227800,
	228239,
	229706,
	294884,
	301629,
	284219,
	301689,
	300650,
	297835,
	300171,
	300087,
	300414,
	300436,
	301088,
	293729,
	291928,
	384194,
	392451,
	392924,
	397889,
	209413,
	207980,
	257397,
	257736,
	382787,
	374699,
	377402,
	369602,
	369465,
	369400,
	381593,
	265091,
	265433,
	382791,
	376780,
	225573,
	278444,
	164887,
	168082,
	76813,
	227913,
	265368,
	},
	["Name"] = "Cast - Big Alert [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
	["Time"] = 1669325410,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
	["Enabled"] = true,
	["Revision"] = 662,
	["semver"] = "",
	["Author"] = "Tercioo-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Plays a small animation when the cast start.",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option3",
	["Value"] = 0,
	["Name"] = "Option 3",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1.2,
	["Desc"] = "How long is the flash played when the cast starts.",
	["Min"] = 0.1,
	["Key"] = "flashDuration",
	["Value"] = 0.6,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Flash Duration",
	},
	{
	["Type"] = 1,
	["Key"] = "flashColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Flash Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the Flash",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
	["SpellIds"] = {
	376851,
	396044,
	381517,
	373932,
	397801,
	208165,
	392576,
	198750,
	387843,
	387411,
	211299,
	198595,
	198934,
	198962,
	156722,
	320170,
	320171,
	320462,
	330712,
	332170,
	333875,
	326836,
	342135,
	333861,
	341969,
	317963,
	327481,
	328331,
	322614,
	325701,
	326438,
	323538,
	321764,
	296523,
	330755,
	295929,
	296019,
	335685,
	170751,
	342207,
	350554,
	348513,
	351779,
	328180,
	319898,
	166335,
	172810,
	172943,
	173148,
	163376,
	228011,
	228277,
	29928,
	228559,
	230050,
	374743,
	227615,
	229716,
	229083,
	299525,
	300514,
	285388,
	294324,
	294180,
	293827,
	297128,
	294015,
	291865,
	281420,
	274383,
	259092,
	367521,
	374544,
	385039,
	382474,
	369823,
	377500,
	260879,
	186269,
	378818,
	371875,
	372225,
	200658,
	266036,
	265407,
	164965,
	429176,
	428526,
	418200,
	407124,
	415437,
	264050,
	267824,
	},
	["Name"] = "Cast - Small Alert [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
	["Time"] = 1615905300,
	["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
	["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
	["Revision"] = 110,
	["Options"] = {
	},
	["Author"] = "Izimode-Azralon",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
	["Enabled"] = true,
	["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
	["Name"] = "Aura - Invalidate Unit [Plater]",
	["PlaterCore"] = 1,
	["Prio"] = 99,
	["SpellIds"] = {
	261265,
	261266,
	271590,
	},
	["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
	["Time"] = 1596198406,
	["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
	["Icon"] = 135024,
	["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
	["Revision"] = 62,
	["Options"] = {
	},
	["Author"] = "Izimode-Azralon",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
	["Enabled"] = true,
	["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
	["Name"] = "Color Change [Plater]",
	["PlaterCore"] = 1,
	["Prio"] = 99,
	["SpellIds"] = {
	},
	["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
	["NpcNames"] = {
	"141851",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
	["Time"] = 1626382829,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
	["Enabled"] = true,
	["Revision"] = 375,
	["semver"] = "",
	["Author"] = "Izimode-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option10",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option17",
	["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 17",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option10",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "blinkEnabled",
	["Value"] = true,
	["Name"] = "Blink Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "set to 'false' to disable blink",
	},
	{
	["Type"] = 4,
	["Key"] = "glowEnabled",
	["Value"] = true,
	["Name"] = "Glow Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "set to 'false' to disable glows",
	},
	{
	["Type"] = 4,
	["Key"] = "changeNameplateColor",
	["Value"] = false,
	["Name"] = "Change NamePlate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "set to 'true' to enable nameplate color change",
	},
	{
	["Type"] = 2,
	["Max"] = 20,
	["Desc"] = "in seconds, affects the blink effect only",
	["Min"] = 1,
	["Key"] = "timeleftToBlink",
	["Value"] = 3,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Timeleft to Blink",
	},
	{
	["Type"] = 2,
	["Max"] = 3,
	["Desc"] = "time to complete a blink loop",
	["Min"] = 0.5,
	["Key"] = "blinkSpeed",
	["Value"] = 1,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Blink Speed",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
	["Min"] = 0.1,
	["Key"] = "blinkMaxAlpha",
	["Value"] = 0.6,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Blink Max Alpha",
	},
	{
	["Type"] = 1,
	["Key"] = "blinkColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Blink Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "color of the blink",
	},
	{
	["Type"] = 1,
	["Key"] = "nameplateColor",
	["Value"] = {
	0.28627450980392,
	0.003921568627451,
	0,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "nameplate color if ChangeNameplateColor is true",
	},
	{
	["Type"] = 6,
	["Key"] = "option10",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "timerColorEnabled",
	["Value"] = true,
	["Name"] = "Timer Color Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "set to 'false' to disable changes in the color of the time left text",
	},
	{
	["Type"] = 2,
	["Max"] = 20,
	["Desc"] = "in seconds, affects the color of the text",
	["Min"] = 1,
	["Key"] = "timeLeftWarning",
	["Value"] = 8,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Time Left Warning",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "in seconds, affects the color of the text",
	["Min"] = 1,
	["Key"] = "timeLeftCritical",
	["Value"] = 3,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Time Left Critical",
	},
	{
	["Type"] = 1,
	["Key"] = "warningColor",
	["Value"] = {
	1,
	0.87058823529412,
	0,
	1,
	},
	["Name"] = "Warning Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "color when the time left entered in a warning zone",
	},
	{
	["Type"] = 1,
	["Key"] = "criticalColor",
	["Value"] = {
	1,
	0.074509803921569,
	0,
	1,
	},
	["Name"] = "Critical Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "color when the time left is critical",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
	["SpellIds"] = {
	},
	["Name"] = "Aura - Blink by Time Left [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
	["Time"] = 1543680853,
	["Icon"] = 133006,
	["Enabled"] = false,
	["Revision"] = 45,
	["Options"] = {
	},
	["Author"] = "Izimode-Azralon",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
	["SpellIds"] = {
	},
	["PlaterCore"] = 1,
	["Name"] = "Aura - Border Color [Plater]",
	["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
	["OptionsValues"] = {
	},
	["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
	["Time"] = 1578054190,
	["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
	["Icon"] = 136048,
	["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
	["Revision"] = 133,
	["Options"] = {
	},
	["Author"] = "Celian-Sylvanas",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
	["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
	["Name"] = "UnitPower [Plater]",
	["PlaterCore"] = 1,
	["Enabled"] = true,
	["SpellIds"] = {
	},
	["Desc"] = "Show the energy amount above the nameplate",
	["NpcNames"] = {
	"Guardian of Yogg-Saron",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
	["Time"] = 1670202265,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
	["Enabled"] = true,
	["Revision"] = 620,
	["semver"] = "",
	["Author"] = "Izimode-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option4",
	["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 4",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option3",
	["Value"] = 0,
	["Name"] = "Option 3",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Set the alpha of the moving arrow",
	["Min"] = 0,
	["Key"] = "arrowAlpha",
	["Value"] = 0.73,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Arrow Alpha",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Time that takes for an arrow to travel from the to right.",
	["Min"] = 0,
	["Key"] = "animSpeed",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Animation Speed",
	},
	{
	["Type"] = 4,
	["Key"] = "desaturateArrow",
	["Value"] = false,
	["Name"] = "Use White Arrow",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "If enabled, the arrow color will be desaturated.",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
	["SpellIds"] = {
	375943,
	385958,
	388623,
	377034,
	374361,
	381525,
	386660,
	385578,
	384699,
	153501,
	153686,
	154442,
	192018,
	219488,
	372087,
	391726,
	391723,
	377383,
	388976,
	370764,
	387067,
	391118,
	391136,
	382233,
	209027,
	212031,
	207261,
	207979,
	198888,
	199805,
	199050,
	191508,
	152792,
	153395,
	323489,
	323496,
	319941,
	319592,
	334266,
	325258,
	334913,
	326221,
	322936,
	323236,
	321834,
	336752,
	325418,
	324667,
	327233,
	324368,
	324205,
	323943,
	319713,
	320596,
	320729,
	323608,
	330614,
	320063,
	332708,
	334023,
	317231,
	317943,
	320966,
	334053,
	328458,
	321968,
	331718,
	325793,
	330453,
	326997,
	334051,
	292903,
	330843,
	294173,
	189200,
	352833,
	330403,
	166675,
	176127,
	166380,
	162058,
	167516,
	166923,
	178299,
	172982,
	163390,
	173384,
	173514,
	29513,
	227672,
	228603,
	227339,
	227493,
	241774,
	229611,
	229151,
	300188,
	299475,
	299502,
	300777,
	301681,
	298946,
	298940,
	300424,
	283422,
	294290,
	291973,
	293986,
	291878,
	292264,
	209495,
	257426,
	255952,
	257870,
	413147,
	383107,
	377559,
	388060,
	376170,
	384524,
	375351,
	390111,
	369791,
	369573,
	369563,
	369335,
	369061,
	375727,
	265016,
	265019,
	260793,
	260292,
	272457,
	272609,
	269843,
	183465,
	226296,
	188169,
	183088,
	410873,
	411012,
	88308,
	382708,
	375251,
	375439,
	372311,
	373742,
	372201,
	374533,
	377204,
	201226,
	204667,
	198379,
	200768,
	253239,
	250258,
	255567,
	194956,
	427510,
	426645,
	412505,
	412129,
	419351,
	401482,
	404916,
	200345,
	200261,
	198641,
	265372,
	271174,
	264694,
	264923,
	},
	["Name"] = "Cast - Frontal Cone [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
	["Time"] = 1604239880,
	["url"] = "",
	["Icon"] = 1029718,
	["Enabled"] = true,
	["Revision"] = 269,
	["semver"] = "",
	["Author"] = "Celian-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
	["Options"] = {
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Show above the nameplate who is the player fixated",
	["SpellIds"] = {
	},
	["Name"] = "Fixate [Plater]",
	["NpcNames"] = {
	"165560",
	},
	},
	{
	["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Time"] = 1604087921,
	["url"] = "",
	["Icon"] = 841383,
	["Enabled"] = true,
	["Revision"] = 266,
	["Options"] = {
	},
	["Author"] = "Tecno-Azralon",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	"spawn of g'huun",
	"smuggled crawg",
	"sergeant bainbridge",
	"blacktooth scrapper",
	"irontide grenadier",
	"feral bloodswarmer",
	"earthrager",
	"crawler mine",
	"rezan",
	},
	["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
	["Name"] = "Fixate On You [Plater]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
	["Time"] = 1605189097,
	["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TextSize = 12\n    envTable.TextFont  = \"Gotham Ultra\"\n    envTable.Xoffset = 0\n    envTable.Yoffset = -12\n    \n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"center\", unitFrame.healthBar, \"center\", envTable.Xoffset, envTable.Yoffset);    \n    \n    envTable.FixateTarget.textsize = envTable.TextSize\n    envTable.FixateTarget.textfont = envTable.TextFont\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n",
	["url"] = "https://wago.io/cQbyWpQeE/3",
	["NpcNames"] = {
	"Earthrager",
	"Spiteful Shade",
	"Carrion Worm",
	},
	["Enabled"] = true,
	["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n",
	["Revision"] = 302,
	["Options"] = {
	},
	["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Prio"] = 99,
	["Author"] = "Celian-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Desc"] = "Show above the nameplate who is the player fixated",
	["SpellIds"] = {
	272584,
	244653,
	260954,
	257739,
	257314,
	266107,
	257582,
	262377,
	257407,
	},
	["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        \n        \n    else \n        envTable.FixateTarget.text = \"\"\n        \n    end    \nend\n\n\n\n\n\n\n\n\n",
	["version"] = 3,
	["PlaterCore"] = 1,
	["Name"] = "Fixate No cast",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    \n    \nend\n\n\n",
	["semver"] = "1.0.2",
	["Icon"] = 1029718,
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
	["Time"] = 1670790652,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
	["Enabled"] = true,
	["Revision"] = 694,
	["semver"] = "",
	["Author"] = "Bombad o-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Plays a special animation showing the explosion time.",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option3",
	["Value"] = 0,
	["Name"] = "Option 3",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 6,
	["Desc"] = "Increases the health bar height by this value",
	["Min"] = 0,
	["Key"] = "castBarHeight",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Health Bar Height Mod",
	},
	{
	["Type"] = 4,
	["Key"] = "useNameplateColor",
	["Value"] = true,
	["Name"] = "Change Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Change Nameplate Color",
	},
	{
	["Type"] = 1,
	["Key"] = "healthBarColor",
	["Value"] = {
	1,
	0.5843137254902,
	0,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Nameplate Color",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useCastbarColor",
	["Value"] = true,
	["Name"] = "Use Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Show an arrow above Use Cast Bar Color",
	},
	{
	["Type"] = 1,
	["Key"] = "castBarColor",
	["Value"] = {
	1,
	0.431372,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Cast Bar Color",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option6",
	["Value"] = "Arrow:",
	["Name"] = "Arrow:",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "showArrow",
	["Value"] = true,
	["Name"] = "Show Arrow",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Arrow alpha.",
	["Min"] = 0,
	["Key"] = "arrowAlpha",
	["Value"] = 0.5,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Arrow Alpha",
	},
	{
	["Type"] = 2,
	["Max"] = 12,
	["Desc"] = "Arrow Width.",
	["Min"] = 4,
	["Key"] = "arrowWidth",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Arrow Width",
	},
	{
	["Type"] = 2,
	["Max"] = 12,
	["Desc"] = "Arrow Height.",
	["Min"] = 4,
	["Key"] = "arrowHeight",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Arrow Height",
	},
	{
	["Type"] = 6,
	["Key"] = "option13",
	["Value"] = 0,
	["Name"] = "Option 13",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option12",
	["Value"] = "Dot Animation:",
	["Name"] = "Dot Animation:",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotColor",
	["Value"] = {
	1,
	0.6156862745098,
	0,
	1,
	},
	["Name"] = "Dot Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Adjust the color of the dot animation.",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Dot X Offset",
	["Min"] = -10,
	["Key"] = "xOffset",
	["Value"] = 4,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot X Offset",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Dot Y Offset",
	["Min"] = -10,
	["Key"] = "yOffset",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot Y Offset",
	},
	{
	["Type"] = 7,
	["Key"] = "castColor",
	["Value"] = {
	{
	"200682",
	"darkslateblue",
	},
	{
	"192307",
	"goldenrod",
	},
	{
	"196838",
	"maroon",
	},
	{
	"193827",
	"darkgreen",
	},
	{
	"194043",
	"darkgreen",
	},
	{
	"156718",
	"DRUID",
	},
	{
	"395859",
	"ROGUE",
	},
	},
	["Name"] = "Color List by SpellId",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
	["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
	["SpellIds"] = {
	383823,
	382670,
	388537,
	372851,
	200682,
	192307,
	196838,
	193827,
	194043,
	209410,
	211464,
	361180,
	156718,
	395859,
	358320,
	374045,
	386757,
	367500,
	370225,
	376200,
	332329,
	320103,
	321406,
	335817,
	321061,
	320141,
	326171,
	163966,
	227966,
	372107,
	388923,
	376934,
	384899,
	373960,
	374724,
	385551,
	259732,
	373424,
	373084,
	87618,
	255041,
	428926,
	76634,
	200050,
	197546,
	198079,
	199193,
	266181,
	253544,
	},
	["Name"] = "Cast - Ultra Important [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OptionsValues"] = {
	},
	["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
	["Time"] = 1612442358,
	["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
	["url"] = "",
	["NpcNames"] = {
	"163520",
	"163618",
	"164506",
	},
	["Enabled"] = false,
	["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Revision"] = 64,
	["Options"] = {
	{
	["Type"] = 5,
	["Key"] = "option1",
	["Value"] = "Auto set a raid target Skull on the unit.",
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option2",
	["Value"] = 0,
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "onlyInCombat",
	["Value"] = false,
	["Name"] = "Only in Combat",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Set the mark only if the unit is in combat.",
	},
	},
	["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Prio"] = 99,
	["Author"] = "Aelerolor-Torghast",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Desc"] = "Auto set skull marker",
	["SpellIds"] = {
	},
	["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
	["version"] = -1,
	["PlaterCore"] = 1,
	["Name"] = "Auto Set Skull",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["semver"] = "",
	["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
	["Time"] = 1604607993,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
	["Enabled"] = true,
	["Revision"] = 406,
	["semver"] = "",
	["Author"] = "Izimode-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option6",
	["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
	["Name"] = "Option 6",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "changeNameplateColor",
	["Value"] = true,
	["Name"] = "Change Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "change to true to change the color",
	},
	{
	["Type"] = 1,
	["Key"] = "nameplateColor",
	["Value"] = {
	1,
	0,
	0.52549019607843,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 6,
	["Desc"] = "increase the nameplate height by this value",
	["Min"] = 0,
	["Key"] = "nameplateSizeOffset",
	["Value"] = 0,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Nameplate Size Offset",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotsColor",
	["Value"] = {
	1,
	0.71372549019608,
	0,
	1,
	},
	["Name"] = "Dot Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
	["SpellIds"] = {
	},
	["Name"] = "Unit - Main Target [P]",
	["NpcNames"] = {
	"156212",
	"168098",
	179124,
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Time"] = 1604354364,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
	["Enabled"] = true,
	["Revision"] = 206,
	["semver"] = "",
	["Author"] = "Aelerolor-Torghast",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Options"] = {
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
	["SpellIds"] = {
	},
	["Name"] = "Countdown",
	["NpcNames"] = {
	"164427",
	"164414",
	"164185",
	"164567",
	"165408",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
	["Time"] = 1606506781,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
	["Enabled"] = true,
	["Revision"] = 109,
	["semver"] = "",
	["Author"] = "Aelerolor-Torghast",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
	["Options"] = {
	{
	["Type"] = 5,
	["Key"] = "option1",
	["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "",
	["Value"] = 0,
	["Name"] = "blank line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "indicatorColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Vertical Line Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Indicator color.",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Indicator alpha.",
	["Min"] = 0.1,
	["Key"] = "indicatorAlpha",
	["Value"] = 0.79,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Vertical Line Alpha",
	},
	{
	["Type"] = 6,
	["Key"] = "",
	["Value"] = 0,
	["Name"] = "blank line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "fillColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Fill Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Fill color.",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Fill alpha.",
	["Min"] = 0,
	["Key"] = "fillAlpha",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Fill Alpha",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
	["SpellIds"] = {
	},
	["Name"] = "Unit - Health Markers [P]",
	["NpcNames"] = {
	"164451",
	"164463",
	"164461",
	"165946",
	"164501",
	"164218",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
	["Time"] = 1618996775,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
	["Enabled"] = true,
	["Revision"] = 843,
	["semver"] = "",
	["Author"] = "Tercioo-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option3",
	["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 3",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useCastbarColor",
	["Value"] = true,
	["Name"] = "Cast Bar Color Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "When enabled, changes the cast bar color,",
	},
	{
	["Type"] = 1,
	["Key"] = "castbarColor",
	["Value"] = {
	1,
	0.43137254901961,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the cast bar.",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
	["Min"] = 0.05,
	["Key"] = "flashDuration",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Flash Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Increases the cast bar height by this value",
	["Min"] = 0,
	["Key"] = "castBarHeight",
	["Value"] = 0,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Bar Height Mod",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
	["Min"] = 0.1,
	["Key"] = "shakeDuration",
	["Value"] = 0.1,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 200,
	["Desc"] = "How strong is the shake.",
	["Min"] = 10,
	["Key"] = "shakeAmplitude",
	["Value"] = 25,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Amplitude",
	},
	{
	["Type"] = 2,
	["Max"] = 80,
	["Desc"] = "How fast the shake moves.",
	["Min"] = 1,
	["Key"] = "shakeFrequency",
	["Value"] = 30,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Frequency",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
	["SpellIds"] = {
	321828,
	},
	["Name"] = "Cast - Tank Interrupt [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
	["Time"] = 1604357453,
	["url"] = "",
	["Icon"] = 136048,
	["Enabled"] = true,
	["Revision"] = 233,
	["semver"] = "",
	["Author"] = "Celian-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option3",
	["Value"] = "Show the power of the unit above the nameplate.",
	["Name"] = "script desc",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option3",
	["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
	["Name"] = "add trigger",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option2",
	["Value"] = 0,
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "showLater",
	["Value"] = true,
	["Name"] = "Show at 80% of Energy",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
	},
	{
	["Type"] = 6,
	["Key"] = "option2",
	["Value"] = 0,
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 32,
	["Desc"] = "Text size.",
	["Min"] = 8,
	["Key"] = "fontSize",
	["Value"] = 16,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Text Size",
	},
	{
	["Type"] = 1,
	["Key"] = "fontColor",
	["Value"] = {
	0.80392156862745,
	0.80392156862745,
	0.80392156862745,
	1,
	},
	["Name"] = "Font Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the text.",
	},
	{
	["Type"] = 4,
	["Key"] = "outline",
	["Value"] = true,
	["Name"] = "Enable Text Outline",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "If enabled, the text uses outline.",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Show the energy amount above the nameplate.",
	["SpellIds"] = {
	},
	["Name"] = "Unit - Show Energy [Plater]",
	["NpcNames"] = {
	"164406",
	"164407",
	"162100",
	"162099",
	"162329",
	"164558",
	150159,
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
	["Time"] = 1611844883,
	["url"] = "",
	["Icon"] = 135945,
	["Enabled"] = false,
	["Revision"] = 186,
	["semver"] = "",
	["Author"] = "Symantec-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
	["Options"] = {
	{
	["Type"] = 5,
	["Key"] = "option12",
	["Value"] = "Time to Die",
	["Name"] = "Time to Die",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 50,
	["Desc"] = "",
	["Min"] = 10,
	["Key"] = "bgWidth",
	["Value"] = 27,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Width",
	},
	{
	["Type"] = 1,
	["Key"] = "bgColor",
	["Value"] = {
	0.50588235294118,
	0.070588235294118,
	1,
	1,
	},
	["Name"] = "Background Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 24,
	["Desc"] = "",
	["Min"] = 7,
	["Key"] = "textSize",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Text Size",
	},
	{
	["Type"] = 1,
	["Key"] = "textColor",
	["Value"] = {
	1,
	0.5843137254902,
	0,
	1,
	},
	["Name"] = "Text Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option11",
	["Value"] = "Targeting",
	["Name"] = "Targeting",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "switchTargetName",
	["Value"] = true,
	["Name"] = "Show Target instead of Name",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useTargetingColor",
	["Value"] = true,
	["Name"] = "Change Color if targeting You",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "targetingColor",
	["Value"] = {
	0.070588235294118,
	0.61960784313725,
	0,
	1,
	},
	["Name"] = "Color if targeting You",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option11",
	["Value"] = 0,
	["Name"] = "Option 11",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Time to die Spiteful affix",
	["SpellIds"] = {
	},
	["Name"] = "M+ Spiteful",
	["NpcNames"] = {
	"174773",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Time"] = 1625697537,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
	["Enabled"] = true,
	["Revision"] = 282,
	["Options"] = {
	{
	["Type"] = 7,
	["Key"] = "customSize",
	["Value"] = {
	{
	"17",
	"120, 16",
	},
	},
	["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
	["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
	},
	{
	["Type"] = 2,
	["Max"] = 200,
	["Desc"] = "",
	["Min"] = 5,
	["Key"] = "width",
	["Value"] = 120,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Bar Width",
	},
	{
	["Type"] = 2,
	["Max"] = 32,
	["Desc"] = "",
	["Min"] = 5,
	["Key"] = "height",
	["Value"] = 16,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Bar Height",
	},
	{
	["Type"] = 6,
	["Key"] = "option5",
	["Value"] = 0,
	["Name"] = "Option 5",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 32,
	["Desc"] = "Set the size of the cast time",
	["Min"] = 8,
	["Key"] = "timerFontSize",
	["Value"] = 12,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Timer Size",
	},
	{
	["Type"] = 6,
	["Key"] = "option6",
	["Value"] = 0,
	["Name"] = "Option 6",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option7",
	["Value"] = "Time Separators",
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "separatorColor",
	["Value"] = {
	1,
	1,
	1,
	0.5992676615715,
	},
	["Name"] = "Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 20,
	["Desc"] = "",
	["Min"] = 1,
	["Key"] = "separatorWidth",
	["Value"] = 1,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Width",
	},
	},
	["Author"] = "Ditador-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	354080,
	},
	["Desc"] = "When a spell resembles more a timer than a spell being cast",
	["Name"] = "Cast - Castbar is Timer [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
	["Time"] = 1669339628,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
	["Enabled"] = true,
	["Revision"] = 878,
	["semver"] = "",
	["Author"] = "Bombad o-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Shows the target name in a separate box",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Option 4",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Flash:",
	["Name"] = "Flash",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1.2,
	["Desc"] = "How long is the flash played when the cast starts.",
	["Min"] = 0.1,
	["Key"] = "flashDuration",
	["Value"] = 0.8,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Flash Duration",
	},
	{
	["Type"] = 1,
	["Key"] = "flashColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Flash Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the Flash",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Shake:",
	["Name"] = "Shake",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 0.5,
	["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
	["Min"] = 0.1,
	["Key"] = "shakeDuration",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "How strong is the shake.",
	["Min"] = 1,
	["Key"] = "shakeAmplitude",
	["Value"] = 5,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Amplitude",
	},
	{
	["Type"] = 2,
	["Max"] = 80,
	["Desc"] = "How fast the shake moves.",
	["Min"] = 1,
	["Key"] = "shakeFrequency",
	["Value"] = 40,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Frequency",
	},
	{
	["Type"] = 6,
	["Key"] = "option13",
	["Value"] = 0,
	["Name"] = "Option 13",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option14",
	["Value"] = "Dot Animation:",
	["Name"] = "Dot Animation",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotColor",
	["Value"] = {
	0.56470588235294,
	0.56470588235294,
	0.56470588235294,
	1,
	},
	["Name"] = "Dot Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Adjust the color of the dots around the nameplate",
	},
	{
	["Type"] = 2,
	["Max"] = 20,
	["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
	["Min"] = -10,
	["Key"] = "xOffset",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot X Offset",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
	["Min"] = -10,
	["Key"] = "yOffset",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dot Y Offset",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option18",
	["Value"] = 0,
	["Name"] = "blank",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option19",
	["Value"] = "Cast Bar",
	["Name"] = "Option 19",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useCastbarColor",
	["Value"] = true,
	["Name"] = "Use Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Use cast bar color.",
	},
	{
	["Type"] = 1,
	["Key"] = "castBarColor",
	["Value"] = {
	0.41176470588235,
	1,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Cast bar color.",
	},
	{
	["Type"] = 6,
	["Key"] = "option27",
	["Value"] = 0,
	["Name"] = "Option 27",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option28",
	["Value"] = "Target Options",
	["Name"] = "Option 28",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 32,
	["Desc"] = "",
	["Min"] = 8,
	["Key"] = "targetNameSize",
	["Value"] = 14,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Text Size",
	},
	{
	["Type"] = 4,
	["Key"] = "colorByClass",
	["Value"] = true,
	["Name"] = "Use Class Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "textColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Text Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "targetBgColor",
	["Value"] = {
	0,
	0,
	0,
	0.98467203229666,
	},
	["Name"] = "Background Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "targetBgBorderColor",
	["Value"] = {
	0,
	0,
	0,
	1,
	},
	["Name"] = "Border Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 160,
	["Desc"] = "",
	["Min"] = 30,
	["Key"] = "targetFrameWidth",
	["Value"] = 90,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Frame Width",
	},
	{
	["Type"] = 2,
	["Max"] = 32,
	["Desc"] = "",
	["Min"] = 8,
	["Key"] = "targetFrameHeight",
	["Value"] = 20,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Frame Height",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Highlight the target name",
	["SpellIds"] = {
	354173,
	},
	["Name"] = "Cast - Important Target [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
	["Time"] = 1670203758,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
	["Enabled"] = true,
	["Revision"] = 1213,
	["semver"] = "",
	["Author"] = "Tercioo-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Cast start animation settings",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useCastbarColor",
	["Value"] = true,
	["Name"] = "Cast Bar Color Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "When enabled, changes the cast bar color,",
	},
	{
	["Type"] = 1,
	["Key"] = "castbarColor",
	["Value"] = {
	1,
	0.43137254901961,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the cast bar.",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
	["Min"] = 0.05,
	["Key"] = "flashDuration",
	["Value"] = 0.4,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Flash Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Increases the cast bar height by this value",
	["Min"] = 0,
	["Key"] = "castBarHeight",
	["Value"] = 5,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Bar Height Mod",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
	["Min"] = 0.1,
	["Key"] = "shakeDuration",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 100,
	["Desc"] = "How strong is the shake.",
	["Min"] = 2,
	["Key"] = "shakeAmplitude",
	["Value"] = 8,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Amplitude",
	},
	{
	["Type"] = 2,
	["Max"] = 80,
	["Desc"] = "How fast the shake moves.",
	["Min"] = 1,
	["Key"] = "shakeFrequency",
	["Value"] = 40,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Frequency",
	},
	{
	["Type"] = 7,
	["Key"] = "timerList",
	["Value"] = {
	},
	["Name"] = "Timer (Key is SpellId and Value is Time)",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
	["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
	["SpellIds"] = {
	350421,
	355787,
	348513,
	},
	["Name"] = "Cast - Alert + Timer [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
	["Time"] = 1647994498,
	["url"] = "",
	["Icon"] = 4263293,
	["Enabled"] = true,
	["Revision"] = 70,
	["Options"] = {
	{
	["Type"] = 5,
	["Key"] = "option1",
	["Value"] = "Color Settings",
	["Name"] = "ColorSettingsAnchor",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "Adjust the nameplate color for each mob",
	},
	{
	["Type"] = 1,
	["Key"] = "hasteColor",
	["Value"] = {
	0.45490196078431,
	0.2156862745098,
	0.54901960784314,
	1,
	},
	["Name"] = "Haste Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "haste color",
	},
	{
	["Type"] = 1,
	["Key"] = "msColor",
	["Value"] = {
	0.30980392156863,
	0.52156862745098,
	0.25882352941176,
	1,
	},
	["Name"] = "Moviment Speep Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "moviment speep color",
	},
	{
	["Type"] = 1,
	["Key"] = "cdrColor",
	["Value"] = {
	0.17254901960784,
	0.28235294117647,
	0.52156862745098,
	1,
	},
	["Name"] = "Cooldown Reduction Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "cooldown reduction color",
	},
	{
	["Type"] = 6,
	["Key"] = "option5",
	["Value"] = 0,
	["Name"] = "Option 5",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option6",
	["Value"] = "Size Settings",
	["Name"] = "SizeSettingsAnchor",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "canChangeSize",
	["Value"] = false,
	["Name"] = "Change Nameplate Size",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "If this is checked, the nameplate size is changed to the values below",
	},
	{
	["Type"] = 2,
	["Max"] = 200,
	["Desc"] = "total width of the nameplate",
	["Min"] = 50,
	["Key"] = "width",
	["Value"] = 100,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Width",
	},
	{
	["Type"] = 2,
	["Max"] = 40,
	["Desc"] = "total height of the nameplate",
	["Min"] = 2,
	["Key"] = "height",
	["Value"] = 12,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Height",
	},
	{
	["Type"] = 6,
	["Key"] = "option9",
	["Value"] = 0,
	["Name"] = "Option 9",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option10",
	["Value"] = "Border Settings",
	["Name"] = "BorderSettingsAnchor",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "showBorder",
	["Value"] = true,
	["Name"] = "Paint Border",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
	},
	{
	["Type"] = 6,
	["Key"] = "option12",
	["Value"] = 0,
	["Name"] = "Option 12",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option13",
	["Value"] = "Name Settings",
	["Name"] = "NameSettings",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 3,
	["Key"] = "hasteName",
	["Value"] = "HASTE",
	["Name"] = "Haste Name",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
	["Desc"] = "",
	},
	{
	["Type"] = 3,
	["Key"] = "cdrName",
	["Value"] = "CDR",
	["Name"] = "Cooldown Reduction Name",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
	["Desc"] = "",
	},
	{
	["Type"] = 3,
	["Key"] = "msName",
	["Value"] = "MS",
	["Name"] = "Movement Speed Name",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
	["Desc"] = "",
	},
	},
	["Author"] = "Ditador-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	},
	["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
	["Name"] = "Relics 9.2 M Dungeons",
	["NpcNames"] = {
	"185685",
	"185680",
	"185683",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
	["Time"] = 1669327146,
	["url"] = "",
	["Icon"] = 610472,
	["Enabled"] = true,
	["Revision"] = 65,
	["semver"] = "",
	["Author"] = "Keyspell-Azralon",
	["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Options"] = {
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
	["SpellIds"] = {
	227548,
	},
	["Name"] = "Aura is Shield [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
	["OptionsValues"] = {
	},
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
	["Time"] = 1668886509,
	["url"] = "",
	["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
	["Enabled"] = true,
	["Revision"] = 33,
	["semver"] = "",
	["Author"] = "Ditador-Azralon",
	["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Options"] = {
	{
	["Type"] = 1,
	["Key"] = "nameplateColor",
	["Value"] = {
	0,
	0.55686274509804,
	0.035294117647059,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
	["SpellIds"] = {
	285388,
	426662,
	426663,
	},
	["Name"] = "Fixate by Unit Buff [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["OptionsValues"] = {
	},
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
	["Time"] = 1672514190,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
	["Enabled"] = true,
	["Revision"] = 547,
	["semver"] = "",
	["Author"] = "Terciob",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Options"] = {
	{
	["Type"] = 2,
	["Max"] = 20,
	["Desc"] = "Need a /reload",
	["Min"] = 5,
	["Key"] = "segmentsAmount",
	["Value"] = 7,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Amount of Segments",
	},
	{
	["Type"] = 1,
	["Key"] = "sparkColor",
	["Value"] = {
	0.95686274509804,
	1,
	0.98823529411765,
	1,
	},
	["Name"] = "Spark Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "glowColor",
	["Value"] = {
	0.85882352941176,
	0.43137254901961,
	1,
	1,
	},
	["Name"] = "Glow Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 7,
	["Key"] = "castColor",
	["Value"] = {
	{
	"385536",
	"maroon",
	},
	{
	"198750",
	"midnightblue",
	},
	{
	"360850",
	"lime",
	},
	{
	"212784",
	"deepskyblue",
	},
	{
	"207980",
	"midnightblue",
	},
	{
	"199033",
	"gold",
	},
	{
	"199034",
	"gold",
	},
	{
	"200969",
	"orange",
	},
	{
	"394512",
	"indigo",
	},
	{
	"397881",
	"deepskyblue",
	},
	{
	"396020",
	"khaki",
	},
	},
	["Name"] = "Cast Color by SpellID",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
	["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
	},
	},
	["version"] = -1,
	["PlaterCore"] = 1,
	["Desc"] = "Show a different animation for the cast bar.",
	["SpellIds"] = {
	376644,
	373017,
	386781,
	384823,
	372735,
	385536,
	392398,
	375596,
	387135,
	360850,
	212784,
	199033,
	199034,
	200969,
	394512,
	397881,
	396020,
	374430,
	373429,
	384353,
	265376,
	193941,
	411002,
	169445,
	},
	["Name"] = "Cast - Glowing [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Time"] = 1671066705,
	["url"] = "",
	["Icon"] = 134229,
	["Enabled"] = true,
	["Revision"] = 37,
	["Options"] = {
	},
	["Author"] = "Huugg-Valdrakken",
	["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	191284,
	},
	["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
	["Name"] = "Cast - Effect After Cast [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
	["Time"] = 1683596223,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
	["Enabled"] = true,
	["Revision"] = 146,
	["Options"] = {
	{
	["Type"] = 5,
	["Key"] = "option1",
	["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "",
	["Value"] = 0,
	["Name"] = "blank line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "indicatorColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Vertical Line Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Indicator color.",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Indicator alpha.",
	["Min"] = 0.1,
	["Key"] = "indicatorAlpha",
	["Value"] = 0.79,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Vertical Line Alpha",
	},
	{
	["Type"] = 6,
	["Key"] = "",
	["Value"] = 0,
	["Name"] = "blank line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "fillColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Fill Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Fill color.",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Fill alpha.",
	["Min"] = 0,
	["Key"] = "fillAlpha",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Fill Alpha",
	},
	},
	["Author"] = "Aelerolor-Torghast",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	},
	["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
	["Name"] = "Add - Health Markers [P]",
	["NpcNames"] = {
	"197697",
	"59544",
	"186227",
	"184020",
	"91005",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
	["Time"] = 1670423785,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
	["Enabled"] = true,
	["Revision"] = 572,
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option6",
	["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
	["Name"] = "Option 6",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "changeNameplateColor",
	["Value"] = true,
	["Name"] = "Change Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "change to true to change the color",
	},
	{
	["Type"] = 1,
	["Key"] = "nameplateColor",
	["Value"] = {
	1,
	0,
	0.52549019607843,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Nameplate Color",
	},
	{
	["Type"] = 2,
	["Max"] = 6,
	["Desc"] = "increase the nameplate height by this value",
	["Min"] = 0,
	["Key"] = "nameplateSizeOffset",
	["Value"] = 3,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Nameplate Size Offset",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "dotsColor",
	["Value"] = {
	1,
	0.71372550725937,
	0,
	0.56313106417656,
	},
	["Name"] = "Dot Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Dot Color",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option10",
	["Value"] = "Extra Texture",
	["Name"] = "Extra Texture",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "Extra Texture",
	},
	{
	["Type"] = 4,
	["Key"] = "showExtraTexture",
	["Value"] = false,
	["Name"] = "Show Extra Texture",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Show Extra Texture",
	},
	{
	["Type"] = 1,
	["Key"] = "skullColor",
	["Value"] = {
	1,
	0.46274509803922,
	0,
	1,
	},
	["Name"] = "Texture Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Texture Color",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Alpha",
	["Min"] = 0,
	["Key"] = "skullAlpha",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Alpha",
	},
	{
	["Type"] = 2,
	["Max"] = 2,
	["Desc"] = "Scale",
	["Min"] = 0.4,
	["Key"] = "skullScale",
	["Value"] = 0.6,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Scale",
	},
	{
	["Type"] = 7,
	["Key"] = "npcColor",
	["Value"] = {
	{
	"196548",
	"forestgreen",
	},
	{
	"195580",
	"forestgreen",
	},
	{
	"195820",
	"forestgreen",
	},
	{
	"195821",
	"forestgreen",
	},
	{
	"189886",
	"forestgreen",
	},
	{
	"75966",
	"forestgreen",
	},
	{
	"102019 ",
	"forestgreen",
	},
	{
	"187159",
	"forestgreen",
	},
	{
	"194897",
	"forestgreen",
	},
	{
	"104251",
	"forestgreen",
	},
	},
	["Name"] = "Npc Color By NpcID",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
	["Desc"] = "Key is the npcID, value is the color name",
	},
	},
	["Author"] = "Izimode-Azralon",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	},
	["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
	["Name"] = "Add - Important [P]",
	["NpcNames"] = {
	"196548",
	"195580",
	"195820",
	"195821",
	"189886",
	"75966",
	"102019",
	"187159",
	"194897",
	"104251",
	"101326",
	"189669",
	"192464",
	190381,
	92538,
	192464,
	131009,
	127315,
	133361,
	136330,
	214117,
	212483,
	101008,
	194745,
	190426,
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Time"] = 1669340442,
	["url"] = "",
	["Icon"] = "interface/addons/plater/images/add_id_icon",
	["Enabled"] = false,
	["Revision"] = 161,
	["Options"] = {
	},
	["Author"] = "Huugg-Valdrakken",
	["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	},
	["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
	["Name"] = "Add - Tag Number [P]",
	["NpcNames"] = {
	"195138",
	"192955",
	"190294",
	"76518",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
	["Time"] = 1669324381,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
	["Enabled"] = true,
	["Revision"] = 887,
	["Options"] = {
	{
	["Type"] = 6,
	["Key"] = "option1",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option2",
	["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
	["Name"] = "Option 2",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 5,
	["Key"] = "option3",
	["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
	["Name"] = "Option 3",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useCastbarColor",
	["Value"] = true,
	["Name"] = "Cast Bar Color Enabled",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "When enabled, changes the cast bar color,",
	},
	{
	["Type"] = 1,
	["Key"] = "castBarColor",
	["Value"] = {
	1,
	0.43137254901961,
	0,
	1,
	},
	["Name"] = "Cast Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the cast bar.",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Blank Line",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
	["Min"] = 0.05,
	["Key"] = "flashDuration",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Flash Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Increases the cast bar height by this value",
	["Min"] = 0,
	["Key"] = "castBarHeight",
	["Value"] = 0,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Cast Bar Height Mod",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
	["Min"] = 0.1,
	["Key"] = "shakeDuration",
	["Value"] = 0.1,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 200,
	["Desc"] = "How strong is the shake.",
	["Min"] = 10,
	["Key"] = "shakeAmplitude",
	["Value"] = 25,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Amplitude",
	},
	{
	["Type"] = 2,
	["Max"] = 80,
	["Desc"] = "How fast the shake moves.",
	["Min"] = 1,
	["Key"] = "shakeFrequency",
	["Value"] = 30,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Frequency",
	},
	},
	["Author"] = "Tercioo-Sylvanas",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	392640,
	397888,
	209033,
	385029,
	374563,
	377341,
	369675,
	369365,
	369411,
	278961,
	202108,
	88186,
	200630,
	255824,
	252781,
	250096,
	200248,
	197797,
	264520,
	418202,
	201839,
	412012,
	411958,
	},
	["Desc"] = "Play a very fast flash when the cast start",
	["Name"] = "Cast - Quick Flash [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
	["Time"] = 1670427654,
	["url"] = "",
	["Icon"] = "interface/addons/plater/media/exclamation_64",
	["Enabled"] = true,
	["Revision"] = 162,
	["Options"] = {
	{
	["Type"] = 4,
	["Key"] = "useNameplateColor",
	["Value"] = true,
	["Name"] = "Change Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Change Nameplate Color",
	},
	{
	["Type"] = 1,
	["Key"] = "healthBarColor",
	["Value"] = {
	1,
	0.43921571969986,
	0.4588235616684,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Nameplate Color",
	},
	{
	["Type"] = 6,
	["Key"] = "option5",
	["Value"] = 0,
	["Name"] = "Blank Space",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useFlash",
	["Value"] = true,
	["Name"] = "Flash Nameplate",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Flash Nameplate",
	},
	{
	["Type"] = 7,
	["Key"] = "npcColor",
	["Value"] = {
	{
	"189893",
	"olivedrab",
	},
	{
	"190187",
	"olivedrab",
	},
	{
	"99922",
	"olivedrab",
	},
	{
	"153285",
	"olivedrab",
	},
	{
	"104822",
	"olivedrab",
	},
	},
	["Name"] = "NpcID to Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
	["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
	},
	},
	["Author"] = "Huugg-Valdrakken",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	},
	["Desc"] = "Change the color of  add",
	["Name"] = "Add - Warning [P]",
	["NpcNames"] = {
	"190187",
	"189893",
	"99922",
	"104822",
	129758,
	186696,
	101075,
	100818,
	98081,
	52019,
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
	["ScriptType"] = 1,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
	["Time"] = 1673726734,
	["url"] = "",
	["Icon"] = 236209,
	["Enabled"] = true,
	["Revision"] = 18,
	["Options"] = {
	},
	["Author"] = "Tiranaa-Azralon",
	["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	372743,
	372749,
	384933,
	},
	["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
	["Name"] = "Aura While Casting [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
	["Time"] = 1672514185,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
	["Enabled"] = true,
	["Revision"] = 506,
	["Options"] = {
	{
	["Type"] = 2,
	["Max"] = 20,
	["Desc"] = "Need a /reload",
	["Min"] = 5,
	["Key"] = "segmentsAmount",
	["Value"] = 20,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Amount of Segments",
	},
	{
	["Type"] = 1,
	["Key"] = "sparkColor",
	["Value"] = {
	0.95686274509804,
	1,
	0.98823529411765,
	1,
	},
	["Name"] = "Spark Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 1,
	["Key"] = "glowColor",
	["Value"] = {
	0.85882352941176,
	0.43137254901961,
	1,
	1,
	},
	["Name"] = "Glow Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	},
	["Author"] = "Terciob",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	377004,
	381516,
	196543,
	199726,
	200291,
	268202,
	},
	["Desc"] = "Just stop casting",
	["Name"] = "Cast - Stop Casting [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
	["Time"] = 1670427838,
	["url"] = "",
	["Icon"] = "interface/addons/plater/media/duck_64",
	["Enabled"] = true,
	["Revision"] = 111,
	["Options"] = {
	{
	["Type"] = 4,
	["Key"] = "useNameplateColor",
	["Value"] = false,
	["Name"] = "Change Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Change Nameplate Color",
	},
	{
	["Type"] = 1,
	["Key"] = "nameplateColor",
	["Value"] = {
	0.062745101749897,
	0.062745101749897,
	0.094117656350136,
	1,
	},
	["Name"] = "Nameplate Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Nameplate Color",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Option 4",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useNameplateScale",
	["Value"] = true,
	["Name"] = "Change Nameplate Scale",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Change Nameplate Scale",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Nameplate Scale",
	["Min"] = 0,
	["Key"] = "scale",
	["Value"] = 0.8,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Nameplate Scale",
	},
	},
	["Author"] = "Huugg-Valdrakken",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	},
	["Desc"] = "",
	["Name"] = "Add - Non Elite Trash [P]",
	["NpcNames"] = {
	"194622",
	"190205",
	"197398",
	"77006",
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
	["Time"] = 1669325411,
	["url"] = "",
	["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
	["Enabled"] = true,
	["Revision"] = 101,
	["Options"] = {
	},
	["Author"] = "Huugg-Valdrakken",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	373688,
	391050,
	},
	["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
	["Name"] = "Cast - Shield Interrupt [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
	["ScriptType"] = 2,
	["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
	["Time"] = 1670428019,
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
	["Enabled"] = true,
	["Revision"] = 162,
	["Options"] = {
	{
	["Type"] = 2,
	["Max"] = 0.3,
	["Desc"] = "Rotation Duration",
	["Min"] = 0.1,
	["Key"] = "rotationDuration",
	["Value"] = 0.15,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Rotation Duration",
	},
	{
	["Type"] = 6,
	["Key"] = "option5",
	["Value"] = 0,
	["Name"] = "Option 5",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1.5,
	["Desc"] = "Animation Start Duration",
	["Min"] = 0,
	["Key"] = "animStartDuration",
	["Value"] = 0.3,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Animation Start Duration",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
	["Min"] = 0,
	["Key"] = "textureStartAlpha",
	["Value"] = 1,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Texture Start Alpha",
	},
	{
	["Type"] = 6,
	["Key"] = "option5",
	["Value"] = 0,
	["Name"] = "Option 5",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1.2,
	["Desc"] = "Texture Scale",
	["Min"] = 0.6,
	["Key"] = "textureScale",
	["Value"] = 0.8,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Texture Scale",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Texture Alpha",
	["Min"] = 0,
	["Key"] = "textureAlpha",
	["Value"] = 1,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Texture Alpha",
	},
	{
	["Type"] = 1,
	["Key"] = "textureColor",
	["Value"] = {
	1,
	1,
	1,
	1,
	},
	["Name"] = "Texture Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Texture Color",
	},
	},
	["Author"] = "Butazzul-Valdrakken",
	["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	385916,
	386063,
	388822,
	373087,
	397785,
	106864,
	193660,
	198263,
	387910,
	370766,
	375591,
	384336,
	209404,
	209378,
	210875,
	396001,
	397899,
	386559,
	382555,
	258672,
	258777,
	257756,
	257784,
	256405,
	256589,
	393793,
	388046,
	375079,
	390290,
	369811,
	369703,
	226287,
	410999,
	372561,
	256882,
	172578,
	412063,
	},
	["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
	["Name"] = "Cast - Circle AoE [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
	["ScriptType"] = 2,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["Time"] = 1676905232,
	["url"] = "",
	["Icon"] = 4038101,
	["Enabled"] = true,
	["Revision"] = 73,
	["Options"] = {
	{
	["Type"] = 1,
	["Key"] = "dotColor",
	["Value"] = {
	1,
	1,
	1,
	0.41662168502808,
	},
	["Name"] = "Dots Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Dots Color",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Dots X Offset",
	["Min"] = -10,
	["Key"] = "xOffset",
	["Value"] = 0,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dots X Offset",
	},
	{
	["Type"] = 2,
	["Max"] = 10,
	["Desc"] = "Dots Y Offset",
	["Min"] = -10,
	["Key"] = "yOffset",
	["Value"] = 0,
	["Fraction"] = false,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Dots Y Offset",
	},
	{
	["Type"] = 6,
	["Key"] = "option4",
	["Value"] = 0,
	["Name"] = "Option 4",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Adjust how fast the blinking occurs",
	["Min"] = 0.2,
	["Key"] = "speed",
	["Value"] = 0.4,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Blink Speed",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Min amount of transparency the blink can have",
	["Min"] = 0,
	["Key"] = "minAlpha",
	["Value"] = 0,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Blink Min Alpha",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "Max amount of transparency the blink can have",
	["Min"] = 0,
	["Key"] = "maxAlpha",
	["Value"] = 0.5,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Blink Max Alpha",
	},
	{
	["Type"] = 1,
	["Key"] = "blinkColor",
	["Value"] = {
	1,
	0.019607843831182,
	0,
	1,
	},
	["Name"] = "Blink Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "Color of the blinking texture",
	},
	},
	["Author"] = "Ditador-Azralon",
	["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	388886,
	209676,
	377912,
	},
	["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
	["Name"] = "Cast - On Going Cast [P]",
	["NpcNames"] = {
	},
	},
	{
	["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
	["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
	["ScriptType"] = 3,
	["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Time"] = 1669340350,
	["url"] = "",
	["Icon"] = "interface/addons/plater/media/radio_64",
	["Enabled"] = true,
	["Revision"] = 106,
	["Options"] = {
	{
	["Type"] = 4,
	["Key"] = "useReverse",
	["Value"] = false,
	["Name"] = "Reverse Health Bar",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 6,
	["Key"] = "option6",
	["Value"] = 0,
	["Name"] = "Option 6",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useShake",
	["Value"] = false,
	["Name"] = "Enable Shake",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 2,
	["Max"] = 1,
	["Desc"] = "How strong is the shake.",
	["Min"] = 0.05,
	["Key"] = "shakeAmplitude",
	["Value"] = 0.2,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Amplitude",
	},
	{
	["Type"] = 2,
	["Max"] = 80,
	["Desc"] = "How fast the shake moves.",
	["Min"] = 1,
	["Key"] = "shakeFrequency",
	["Value"] = 70,
	["Fraction"] = true,
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
	["Name"] = "Shake Frequency",
	},
	{
	["Type"] = 6,
	["Key"] = "option7",
	["Value"] = 0,
	["Name"] = "Option 7",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "useBackground",
	["Value"] = true,
	["Name"] = "Show Red Background",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "Show Red Background",
	},
	},
	["Author"] = "Huugg-Valdrakken",
	["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
	["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
	["semver"] = "",
	["version"] = -1,
	["PlaterCore"] = 1,
	["SpellIds"] = {
	},
	["Desc"] = "",
	["Name"] = "Add - Explode on Die [P]",
	["NpcNames"] = {
	"194895",
	"105703",
	"59598",
	"58319",
	200388,
	189299,
	131402,
	135052,
	},
	},
	},
	["saved_cvars_last_change"] = {
	["nameplateShowOnlyNames"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateOverlapV"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["NamePlateClassificationScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateTargetRadialPosition"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4122: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4120: in function <Interface/AddOns/Plater/Plater.lua:4120>\n",
	["nameplateNotSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4125: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4120: in function <Interface/AddOns/Plater/Plater.lua:4120>\n",
	["clampTargetNameplateToScreen"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowAll"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
	["NamePlateVerticalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4124: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4120: in function <Interface/AddOns/Plater/Plater.lua:4120>\n",
	["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateGlobalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowEnemyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateSelectedScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
	["nameplateMotion"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8602: in function `RefreshAutoToggle'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2341: in function `func'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3965: in function <Interface/AddOns/Plater/Plater.lua:3961>\n",
	["nameplateMinScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateRemovalAnimation"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4126: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4120: in function <Interface/AddOns/Plater/Plater.lua:4120>\n",
	["nameplateOtherTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4123: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4120: in function <Interface/AddOns/Plater/Plater.lua:4120>\n",
	["NamePlateHorizontalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateShowEnemyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	["ShowClassColorInNameplate"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface\\AddOns\\Plater\\Plater.lua\"]:2314: in function `RestoreProfileCVars'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:908: in function `DoProfileImport'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:771: in function `ConfirmImportProfile'\n[string \"@Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua\"]:1160: in function <Interface\\AddOns\\Plater\\Plater_OptionsPanel.lua:1160>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\fw.lua\"]:4471: in function `CoreDispatch'\n[string \"@Interface\\AddOns\\Details\\Libs\\DF\\button.lua\"]:738: in function <Interface\\AddOns\\Details\\Libs\\DF\\button.lua:674>\n",
	},
	["url"] = "https://wago.io/DuW5za378/2",
	["target_shady_enabled"] = false,
	["aura2_y_offset"] = 31.09999084472656,
	["aura_timer_text_anchor"] = {
	["y"] = -0.6000003814697266,
	},
	["buffs_on_aura2"] = true,
	["health_selection_overlay"] = "Melli Dark",
	["expansion_triggerwipe"] = {
	[0] = true,
	["0"] = true,
	},
	["npc_cache"] = {
	[218537] = {
	"Mekgineer Thermaplugg",
	"Gnomeregan",
	"enUS",
	},
	[220072] = {
	"Electrocutioner 6000",
	"Gnomeregan",
	"enUS",
	},
	[180431] = {
	"Focused Ritualist",
	"Tazavesh, the Veiled Market",
	},
	[218538] = {
	"STX-96/FR",
	"Gnomeregan",
	"enUS",
	},
	[150253] = {
	"Weaponized Crawler",
	"Operation: Mechagon",
	},
	[184908] = {
	"Vy Interceptor",
	"The Necrotic Wake",
	},
	[150254] = {
	"Scraphound",
	"Operation: Mechagon",
	},
	[173016] = {
	"Corpse Collector",
	"The Necrotic Wake",
	},
	[180433] = {
	"Wandering Pulsar",
	"Tazavesh, the Veiled Market",
	},
	[6206] = {
	"Caverndeep Burrower",
	"Gnomeregan",
	"enUS",
	},
	[120651] = {
	"Explosives",
	"Atal'Dazar",
	},
	[6218] = {
	"Irradiated Slime",
	"Gnomeregan",
	"enUS",
	},
	[6222] = {
	"Leprous Technician",
	"Gnomeregan",
	"enUS",
	},
	[6226] = {
	"Mechano-Flamewalker",
	"Gnomeregan",
	"enUS",
	},
	[6230] = {
	"Peacekeeper Security Suit",
	"Gnomeregan",
	"enUS",
	},
	[6234] = {
	"Mechanized Guardian",
	"Gnomeregan",
	"enUS",
	},
	[204091] = {
	"Blackfathom Elite",
	"Blackfathom Deeps",
	"enUS",
	},
	[184910] = {
	"Wo Drifter",
	"The Necrotic Wake",
	},
	[215728] = {
	"Crowd Pummeler 9-60",
	"Gnomeregan",
	"enUS",
	},
	[178133] = {
	"Murkbrine Wavejumper",
	"Tazavesh, the Veiled Market",
	},
	[184911] = {
	"Urh Dismantler",
	"The Necrotic Wake",
	},
	[7329] = {
	"Withered Quilguard",
	"Razorfen Downs",
	"enUS",
	},
	[7333] = {
	"Withered Battle Boar",
	"Razorfen Downs",
	"enUS",
	},
	[7337] = {
	"Death's Head Necromancer",
	"Razorfen Downs",
	"enUS",
	},
	[7341] = {
	"Skeletal Frostweaver",
	"Razorfen Downs",
	"enUS",
	},
	[7345] = {
	"Splinterbone Captain",
	"Razorfen Downs",
	"enUS",
	},
	[161895] = {
	"Thing From Beyond",
	"Horrific Vision of Orgrimmar",
	},
	[7353] = {
	"Freezing Spirit",
	"Razorfen Downs",
	"enUS",
	},
	[4288] = {
	"Scarlet Beastmaster",
	"Scarlet Monastery",
	"enUS",
	},
	[83761] = {
	"Ogron Laborer",
	"Iron Docks",
	},
	[4296] = {
	"Scarlet Adept",
	"Scarlet Monastery",
	"enUS",
	},
	[4300] = {
	"Scarlet Wizard",
	"Scarlet Monastery",
	"enUS",
	},
	[4304] = {
	"Scarlet Tracking Hound",
	"Scarlet Monastery",
	"enUS",
	},
	[4308] = {
	"Unfettered Spirit",
	"Scarlet Monastery",
	"enUS",
	},
	[178392] = {
	"Gatewarden Zo'mazz",
	"Tazavesh, the Veiled Market",
	},
	[168418] = {
	"Forsworn Inquisitor",
	"Spires of Ascension",
	},
	[165222] = {
	"Zolramus Bonemender",
	"The Necrotic Wake",
	},
	[6426] = {
	"Anguished Dead",
	"Scarlet Monastery",
	"enUS",
	},
	[185683] = {
	"Wo Relic",
	"The Necrotic Wake",
	},
	[168420] = {
	"Forsworn Champion",
	"Spires of Ascension",
	},
	[170850] = {
	"Raging Bloodhorn",
	"Theater of Pain",
	},
	[174175] = {
	"Loyal Stoneborn",
	"Halls of Atonement",
	},
	[4416] = {
	"Defias Strip Miner",
	"Deadmines",
	"enUS",
	},
	[83763] = {
	"Grom'kar Technician",
	"Iron Docks",
	},
	[4424] = {
	"Aggem Thorncurse",
	"Razorfen Kraul",
	"enUS",
	},
	[4428] = {
	"Death Speaker Jargba",
	"Razorfen Kraul",
	"enUS",
	},
	[4436] = {
	"Razorfen Quilguard",
	"Razorfen Kraul",
	"enUS",
	},
	[4440] = {
	"Razorfen Totemic",
	"Razorfen Kraul",
	"enUS",
	},
	[4444] = {
	"Deathstalker Vincent",
	"Shadowfang Keep",
	"enUS",
	},
	[209214] = {
	"Blackfathom Murloc",
	"Blackfathom Deeps",
	"enUS",
	},
	[178141] = {
	"Murkbrine Scalebinder",
	"Tazavesh, the Veiled Market",
	},
	[160495] = {
	"Maniacal Soulbinder",
	"Theater of Pain",
	},
	[178142] = {
	"Murkbrine Fishmancer",
	"Tazavesh, the Veiled Market",
	},
	[4512] = {
	"Rotting Agam'ar",
	"Razorfen Kraul",
	"enUS",
	},
	[4516] = {
	"Death's Head Adept",
	"Razorfen Kraul",
	"enUS",
	},
	[4520] = {
	"Razorfen Geomancer",
	"Razorfen Kraul",
	"enUS",
	},
	[4528] = {
	"Stone Rumbler",
	"Razorfen Kraul",
	"enUS",
	},
	[4532] = {
	"Razorfen Beastmaster",
	"Razorfen Kraul",
	"enUS",
	},
	[4540] = {
	"Scarlet Monk",
	"Scarlet Monastery",
	"enUS",
	},
	[83765] = {
	"Grom'kar Footsoldier",
	"Iron Docks",
	},
	[168681] = {
	"Forsworn Helion",
	"Spires of Ascension",
	},
	[575] = {
	"Fire Elemental",
	"Scarlet Monastery",
	"enUS",
	},
	[154744] = {
	"Toxic Monstrosity",
	"Operation: Mechagon",
	},
	[167533] = {
	"Advent Nevermore",
	"Theater of Pain",
	},
	[177891] = {
	"Mawforged Summoner",
	"Sanctum of Domination",
	},
	[202699] = {
	"Baron Aquanis",
	"Blackfathom Deeps",
	"enUS",
	},
	[172265] = {
	"Remnant of Fury",
	"Sanguine Depths",
	},
	[177892] = {
	"Mawforged Goliath",
	"Sanctum of Domination",
	},
	[165872] = {
	"Flesh Crafter",
	"The Necrotic Wake",
	},
	[168942] = {
	"Death Speaker",
	"De Other Side",
	},
	[5755] = {
	"Deviate Viper",
	"Wailing Caverns",
	"enUS",
	},
	[5763] = {
	"Nightmare Ectoplasm",
	"Wailing Caverns",
	"enUS",
	},
	[167536] = {
	"Harugia the Bloodthirsty",
	"Theater of Pain",
	},
	[89011] = {
	"Rylak Skyterror",
	"Iron Docks",
	},
	[5775] = {
	"Verdan the Everliving",
	"Wailing Caverns",
	"enUS",
	},
	[162038] = {
	"Regal Mistdancer",
	"Sanguine Depths",
	},
	[598] = {
	"Defias Miner",
	"Deadmines",
	"enUS",
	},
	[150146] = {
	"Scrapbone Shaman",
	"Operation: Mechagon",
	},
	[7849] = {
	"Mobile Alert System",
	"Gnomeregan",
	"enUS",
	},
	[162039] = {
	"Wicked Oppressor",
	"Sanguine Depths",
	},
	[115418] = {
	"Spider",
	"Return to Karazhan",
	},
	[8585] = {
	"Frost Spectre",
	"Razorfen Downs",
	"enUS",
	},
	[4812] = {
	"Twilight Loreseeker",
	"Blackfathom Deeps",
	"enUS",
	},
	[4820] = {
	"Blindlight Oracle",
	"Blackfathom Deeps",
	"enUS",
	},
	[4824] = {
	"Aku'mai Fisher",
	"Blackfathom Deeps",
	"enUS",
	},
	[162040] = {
	"Grand Overseer",
	"Sanguine Depths",
	},
	[4832] = {
	"Twilight Lord Kelris",
	"Blackfathom Deeps",
	"enUS",
	},
	[81212] = {
	"Grimrail Overseer",
	"Grimrail Depot",
	},
	[150276] = {
	"Heavy Scrapbot",
	"Operation: Mechagon",
	},
	[83578] = {
	"Ogron Laborer",
	"Iron Docks",
	},
	[4860] = {
	"Stone Steward",
	"Uldaman",
	"enUS",
	},
	[171376] = {
	"Head Custodian Javlin",
	"Sanguine Depths",
	},
	[622] = {
	"Goblin Engineer",
	"Deadmines",
	"enUS",
	},
	[7030] = {
	"Shadowforge Geologist",
	"Uldaman",
	"enUS",
	},
	[213451] = {
	"Void Elemental",
	"Blackfathom Deeps",
	"enUS",
	},
	[114526] = {
	"Ghostly Understudy",
	"Return to Karazhan",
	},
	[6035] = {
	"Razorfen Stalker",
	"Razorfen Kraul",
	"enUS",
	},
	[202838] = {
	"Fathom Elemental",
	"Blackfathom Deeps",
	"enUS",
	},
	[6047] = {
	"Aqua Guardian",
	"Blackfathom Deeps",
	"enUS",
	},
	[214603] = {
	"Blackfathom Tide Priestess",
	"Blackfathom Deeps",
	"enUS",
	},
	[2520] = {
	"Remote-Controlled Golem",
	"Deadmines",
	"enUS",
	},
	[81407] = {
	"Grimrail Bombardier",
	"Grimrail Depot",
	},
	[173044] = {
	"Stitching Assistant",
	"The Necrotic Wake",
	},
	[154758] = {
	"Toxic Monstrosity",
	"Operation: Mechagon",
	},
	[162047] = {
	"Insatiable Brute",
	"Sanguine Depths",
	},
	[5056] = {
	"Deviate Dreadfang",
	"Wailing Caverns",
	"enUS",
	},
	[634] = {
	"Defias Overseer",
	"Deadmines",
	"enUS",
	},
	[636] = {
	"Defias Blackguard",
	"Deadmines",
	"enUS",
	},
	[202840] = {
	"Torrent Elemental",
	"Blackfathom Deeps",
	"enUS",
	},
	[166396] = {
	"Noble Skirmisher",
	"Sanguine Depths",
	},
	[639] = {
	"Edwin VanCleef",
	"Deadmines",
	"enUS",
	},
	[180335] = {
	"Cartel Smuggler",
	"Tazavesh, the Veiled Market",
	},
	[641] = {
	"Goblin Woodcarver",
	"Deadmines",
	"enUS",
	},
	[168443] = {
	"Zolramus Necromancer",
	"The Necrotic Wake",
	},
	[643] = {
	"Sneed",
	"Deadmines",
	"enUS",
	},
	[162689] = {
	"Surgeon Stitchflesh",
	"The Necrotic Wake",
	},
	[644] = {
	"Rhahk'Zor",
	"Deadmines",
	"enUS",
	},
	[180336] = {
	"Cartel Wiseguy",
	"Tazavesh, the Veiled Market",
	},
	[645] = {
	"Cookie",
	"Deadmines",
	"enUS",
	},
	[105705] = {
	"Bound Energy",
	"Court of Stars",
	},
	[170490] = {
	"Atal'ai High Priest",
	"De Other Side",
	},
	[168572] = {
	"Fungi Stormer",
	"Plaguefall",
	},
	[647] = {
	"Captain Greenskin",
	"Deadmines",
	"enUS",
	},
	[6207] = {
	"Caverndeep Ambusher",
	"Gnomeregan",
	"enUS",
	},
	[6211] = {
	"Caverndeep Reaver",
	"Gnomeregan",
	"enUS",
	},
	[163458] = {
	"Forsworn Castigator",
	"Spires of Ascension",
	},
	[6219] = {
	"Corrosive Lurker",
	"Gnomeregan",
	"enUS",
	},
	[162691] = {
	"Blightbone",
	"The Necrotic Wake",
	},
	[6227] = {
	"Mechano-Frostwalker",
	"Gnomeregan",
	"enUS",
	},
	[168318] = {
	"Forsworn Goliath",
	"Spires of Ascension",
	},
	[6243] = {
	"Gelihast",
	"Blackfathom Deeps",
	"enUS",
	},
	[150160] = {
	"Scrapbone Bully",
	"Operation: Mechagon",
	},
	[207576] = {
	"Corrupted Molten Fury Totem",
	"Blackfathom Deeps",
	"enUS",
	},
	[162692] = {
	"Amarth",
	"The Necrotic Wake",
	},
	[178165] = {
	"Coastwalker Goliath",
	"Tazavesh, the Veiled Market",
	},
	[114338] = {
	"Mana Confluence",
	"Return to Karazhan",
	},
	[3653] = {
	"Kresh",
	"Wailing Caverns",
	"enUS",
	},
	[165762] = {
	"Soul Infuser",
	"Castle Nathria",
	},
	[7334] = {
	"Battle Boar Horror",
	"Razorfen Downs",
	"enUS",
	},
	[3671] = {
	"Lady Anacondra",
	"Wailing Caverns",
	"enUS",
	},
	[86526] = {
	"Grom'kar Chainmaster",
	"Iron Docks",
	},
	[7346] = {
	"Splinterbone Centurion",
	"Razorfen Downs",
	"enUS",
	},
	[81603] = {
	"Champion Druna",
	"Iron Docks",
	},
	[166275] = {
	"Mistveil Shaper",
	"Mists of Tirna Scithe",
	},
	[4293] = {
	"Scarlet Scryer",
	"Scarlet Monastery",
	"enUS",
	},
	[4297] = {
	"Scarlet Conjuror",
	"Scarlet Monastery",
	"enUS",
	},
	[4301] = {
	"Scarlet Centurion",
	"Scarlet Monastery",
	"enUS",
	},
	[165764] = {
	"Rockbound Vanquisher",
	"Castle Nathria",
	},
	[166276] = {
	"Mistveil Guardian",
	"Mists of Tirna Scithe",
	},
	[168578] = {
	"Fungalmancer",
	"Plaguefall",
	},
	[150292] = {
	"Mechagon Cavalry",
	"Operation: Mechagon",
	},
	[150165] = {
	"Slime Elemental",
	"Operation: Mechagon",
	},
	[6427] = {
	"Haunting Phantasm",
	"Scarlet Monastery",
	"enUS",
	},
	[177787] = {
	"Mawsworn Hopebreaker",
	"Sanctum of Domination",
	},
	[170882] = {
	"Bone Magus",
	"Theater of Pain",
	},
	[12902] = {
	"Lorgus Jett",
	"Blackfathom Deeps",
	"enUS",
	},
	[4417] = {
	"Defias Taskmaster",
	"Deadmines",
	"enUS",
	},
	[4421] = {
	"Charlga Razorflank",
	"Razorfen Kraul",
	"enUS",
	},
	[150295] = {
	"Tank Buster MK1",
	"Operation: Mechagon",
	},
	[4437] = {
	"Razorfen Warden",
	"Razorfen Kraul",
	"enUS",
	},
	[6487] = {
	"Arcanist Doan",
	"Scarlet Monastery",
	"enUS",
	},
	[150168] = {
	"Toxic Monstrosity",
	"Operation: Mechagon",
	},
	[209758] = {
	"Invading Nightmare",
	"Blackfathom Deeps",
	"enUS",
	},
	[162317] = {
	"Gorechop",
	"Theater of Pain",
	},
	[207457] = {
	"Corrupted Lightning Shield Totem",
	"Blackfathom Deeps",
	"enUS",
	},
	[183033] = {
	"Grim Reflection",
	"Sepulcher of the First Ones",
	},
	[6547] = {
	"Suffering Victim",
	"Scarlet Monastery",
	"enUS",
	},
	[114790] = {
	"Viz'aduum the Watcher",
	"Return to Karazhan",
	},
	[4517] = {
	"Death's Head Priest",
	"Razorfen Kraul",
	"enUS",
	},
	[4525] = {
	"Razorfen Earthbreaker",
	"Razorfen Kraul",
	"enUS",
	},
	[6575] = {
	"Scarlet Trainee",
	"Scarlet Monastery",
	"enUS",
	},
	[4541] = {
	"Blood of Agamaggan",
	"Razorfen Kraul",
	"enUS",
	},
	[3849] = {
	"Deathstalker Adamant",
	"Shadowfang Keep",
	"enUS",
	},
	[3851] = {
	"Shadowfang Whitescalp",
	"Shadowfang Keep",
	"enUS",
	},
	[3853] = {
	"Shadowfang Moonwalker",
	"Shadowfang Keep",
	"enUS",
	},
	[3855] = {
	"Shadowfang Darksoul",
	"Shadowfang Keep",
	"enUS",
	},
	[3857] = {
	"Shadowfang Glutton",
	"Shadowfang Keep",
	"enUS",
	},
	[3859] = {
	"Shadowfang Ragetooth",
	"Shadowfang Keep",
	"enUS",
	},
	[179841] = {
	"Veteran Sparkcaster",
	"Tazavesh, the Veiled Market",
	},
	[3863] = {
	"Lupine Horror",
	"Shadowfang Keep",
	"enUS",
	},
	[3865] = {
	"Shadow Charger",
	"Shadowfang Keep",
	"enUS",
	},
	[3873] = {
	"Tormented Officer",
	"Shadowfang Keep",
	"enUS",
	},
	[3875] = {
	"Haunted Servitor",
	"Shadowfang Keep",
	"enUS",
	},
	[3877] = {
	"Wailing Guardsman",
	"Shadowfang Keep",
	"enUS",
	},
	[168717] = {
	"Forsworn Justicar",
	"Spires of Ascension",
	},
	[144293] = {
	"Waste Processing Unit",
	"Operation: Mechagon",
	},
	[3887] = {
	"Baron Silverlaine",
	"Shadowfang Keep",
	"enUS",
	},
	[168718] = {
	"Forsworn Warden",
	"Spires of Ascension",
	},
	[144294] = {
	"Mechagon Tinkerer",
	"Operation: Mechagon",
	},
	[183424] = {
	"Virtuous Gentleman",
	"Return to Karazhan",
	},
	[5756] = {
	"Deviate Venomwing",
	"Wailing Caverns",
	"enUS",
	},
	[144295] = {
	"Mechagon Mechanic",
	"Operation: Mechagon",
	},
	[183425] = {
	"Wholesome Host",
	"Return to Karazhan",
	},
	[3927] = {
	"Wolf Master Nandos",
	"Shadowfang Keep",
	"enUS",
	},
	[179334] = {
	"Portalmancer Zo'nyy",
	"Tazavesh, the Veiled Market",
	},
	[4805] = {
	"Blackfathom Sea Witch",
	"Blackfathom Deeps",
	"enUS",
	},
	[4809] = {
	"Twilight Acolyte",
	"Blackfathom Deeps",
	"enUS",
	},
	[4813] = {
	"Twilight Shadowmage",
	"Blackfathom Deeps",
	"enUS",
	},
	[3947] = {
	"Goblin Shipbuilder",
	"Deadmines",
	"enUS",
	},
	[4825] = {
	"Aku'mai Snapjaw",
	"Blackfathom Deeps",
	"enUS",
	},
	[4829] = {
	"Aku'mai",
	"Blackfathom Deeps",
	"enUS",
	},
	[144298] = {
	"Defense Bot Mk III",
	"Operation: Mechagon",
	},
	[176395] = {
	"Overloaded Mailemental",
	"Tazavesh, the Veiled Market",
	},
	[104246] = {
	"Duskwatch Guard",
	"Court of Stars",
	},
	[3975] = {
	"Herod",
	"Scarlet Monastery",
	"enUS",
	},
	[3977] = {
	"High Inquisitor Whitemane",
	"Scarlet Monastery",
	"enUS",
	},
	[176396] = {
	"Defective Sorter",
	"Tazavesh, the Veiled Market",
	},
	[217956] = {
	"Chomper",
	"Gnomeregan",
	"enUS",
	},
	[212458] = {
	"Phantasmal Crustacean",
	"Blackfathom Deeps",
	"enUS",
	},
	[7011] = {
	"Earthen Rocksmasher",
	"Uldaman",
	"enUS",
	},
	[165529] = {
	"Depraved Collector",
	"Halls of Atonement",
	},
	[4977] = {
	"Murkshallow Softshell",
	"Blackfathom Deeps",
	"enUS",
	},
	[213994] = {
	"Corrosive Droplet",
	"Blackfathom Deeps",
	"enUS",
	},
	[114542] = {
	"Ghostly Philanthropist",
	"Return to Karazhan",
	},
	[115757] = {
	"Wrathguard Flamebringer",
	"Return to Karazhan",
	},
	[212461] = {
	"Phantasmal Servant",
	"Blackfathom Deeps",
	"enUS",
	},
	[219111] = {
	"Frost Bomb",
	"Gnomeregan",
	"enUS",
	},
	[5053] = {
	"Deviate Crocolisk",
	"Wailing Caverns",
	"enUS",
	},
	[166299] = {
	"Mistveil Tender",
	"Mists of Tirna Scithe",
	},
	[212462] = {
	"Phantasmal Softshell",
	"Blackfathom Deeps",
	"enUS",
	},
	[216810] = {
	"Desiccated Fallout",
	"Gnomeregan",
	"enUS",
	},
	[220007] = {
	"Viscous Fallout",
	"Gnomeregan",
	"enUS",
	},
	[219112] = {
	"Radioactive Bomb",
	"Gnomeregan",
	"enUS",
	},
	[212463] = {
	"Phantasmal Snapjaw",
	"Blackfathom Deeps",
	"enUS",
	},
	[164510] = {
	"Shambling Arbalest",
	"Theater of Pain",
	},
	[171799] = {
	"Depths Warden",
	"Sanguine Depths",
	},
	[201722] = {
	"Ghamoo-ra",
	"Blackfathom Deeps",
	"enUS",
	},
	[114544] = {
	"Skeletal Usher",
	"Return to Karazhan",
	},
	[166302] = {
	"Corpse Harvester",
	"The Necrotic Wake",
	},
	[81297] = {
	"Dreadfang",
	"Iron Docks",
	},
	[155433] = {
	"Void-Touched Emissary",
	"Freehold",
	},
	[167965] = {
	"Lubricator",
	"De Other Side",
	},
	[204921] = {
	"Gelihast",
	"Blackfathom Deeps",
	"enUS",
	},
	[6212] = {
	"Dark Iron Agent",
	"Gnomeregan",
	"enUS",
	},
	[163618] = {
	"Zolramus Necromancer",
	"The Necrotic Wake",
	},
	[6224] = {
	"Leprous Machinesmith",
	"Gnomeregan",
	"enUS",
	},
	[6232] = {
	"Arcane Nullifier X-21",
	"Gnomeregan",
	"enUS",
	},
	[217582] = {
	"Caverndeep Ambusher",
	"Gnomeregan",
	"enUS",
	},
	[163619] = {
	"Zolramus Bonecarver",
	"The Necrotic Wake",
	},
	[163620] = {
	"Rotspew",
	"The Necrotic Wake",
	},
	[83025] = {
	"Grom'kar Battlemaster",
	"Iron Docks",
	},
	[7327] = {
	"Withered Warrior",
	"Razorfen Downs",
	"enUS",
	},
	[179733] = {
	"Invigorating Fish Stick",
	"Tazavesh, the Veiled Market",
	},
	[7335] = {
	"Death's Head Geomancer",
	"Razorfen Downs",
	"enUS",
	},
	[163621] = {
	"Goregrind",
	"The Necrotic Wake",
	},
	[7343] = {
	"Splinterbone Skeleton",
	"Razorfen Downs",
	"enUS",
	},
	[7347] = {
	"Boneflayer Ghoul",
	"Razorfen Downs",
	"enUS",
	},
	[7351] = {
	"Tomb Reaver",
	"Razorfen Downs",
	"enUS",
	},
	[7355] = {
	"Tuten'kash",
	"Razorfen Downs",
	"enUS",
	},
	[4290] = {
	"Scarlet Guardsman",
	"Scarlet Monastery",
	"enUS",
	},
	[4294] = {
	"Scarlet Sorcerer",
	"Scarlet Monastery",
	"enUS",
	},
	[4298] = {
	"Scarlet Defender",
	"Scarlet Monastery",
	"enUS",
	},
	[4302] = {
	"Scarlet Champion",
	"Scarlet Monastery",
	"enUS",
	},
	[4306] = {
	"Scarlet Torturer",
	"Scarlet Monastery",
	"enUS",
	},
	[83026] = {
	"Siegemaster Olugar",
	"Iron Docks",
	},
	[81236] = {
	"Grimrail Technician",
	"Grimrail Depot",
	},
	[177817] = {
	"Support Officer",
	"Tazavesh, the Veiled Market",
	},
	[82579] = {
	"Grom'kar Far Seer",
	"Grimrail Depot",
	},
	[165414] = {
	"Depraved Obliterator",
	"Halls of Atonement",
	},
	[114804] = {
	"Spectral Charger",
	"Return to Karazhan",
	},
	[207358] = {
	"Blackfathom Tide Priestess",
	"Blackfathom Deeps",
	"enUS",
	},
	[168357] = {
	"Zolramus Sorcerer",
	"The Necrotic Wake",
	},
	[207359] = {
	"Blackfathom Tide Priestess",
	"Blackfathom Deeps",
	"enUS",
	},
	[163882] = {
	"Decaying Flesh Giant",
	"Plaguefall",
	},
	[4442] = {
	"Razorfen Defender",
	"Razorfen Kraul",
	"enUS",
	},
	[164266] = {
	"Domina Venomblade",
	"Plaguefall",
	},
	[173729] = {
	"Manifestation of Pride",
	"Theater of Pain",
	},
	[169893] = {
	"Nefarious Darkspeaker",
	"Theater of Pain",
	},
	[150712] = {
	"Trixie Tazer",
	"Operation: Mechagon",
	},
	[8996] = {
	"Voidwalker Minion",
	"Blackfathom Deeps",
	"enUS",
	},
	[4510] = {
	"Heralath Fallowbrook",
	"Razorfen Kraul",
	"enUS",
	},
	[4514] = {
	"Raging Agam'ar",
	"Razorfen Kraul",
	"enUS",
	},
	[4518] = {
	"Death's Head Sage",
	"Razorfen Kraul",
	"enUS",
	},
	[4522] = {
	"Razorfen Dustweaver",
	"Razorfen Kraul",
	"enUS",
	},
	[4526] = {
	"Wind Howler",
	"Razorfen Kraul",
	"enUS",
	},
	[4530] = {
	"Razorfen Handler",
	"Razorfen Kraul",
	"enUS",
	},
	[4534] = {
	"Tamed Hyena",
	"Razorfen Kraul",
	"enUS",
	},
	[4538] = {
	"Kraul Bat",
	"Razorfen Kraul",
	"enUS",
	},
	[4542] = {
	"High Inquisitor Fairbanks",
	"Scarlet Monastery",
	"enUS",
	},
	[1663] = {
	"Dextren Ward",
	"Stormwind Stockade",
	"enUS",
	},
	[1666] = {
	"Kam Deepfury",
	"Stormwind Stockade",
	"enUS",
	},
	[163121] = {
	"Stitched Vanguard",
	"The Necrotic Wake",
	},
	[207367] = {
	"Blackfathom Tide Priestess",
	"Blackfathom Deeps",
	"enUS",
	},
	[135246] = {
	"\"Stabby\" Lottie",
	"Skittering Hollow (Islands 5)",
	},
	[163891] = {
	"Rotmarrow Slime",
	"Plaguefall",
	},
	[1696] = {
	"Targorr the Dread",
	"Stormwind Stockade",
	"enUS",
	},
	[5761] = {
	"Deviate Shambler",
	"Wailing Caverns",
	"enUS",
	},
	[8477] = {
	"Skeletal Servant",
	"Razorfen Downs",
	"enUS",
	},
	[1706] = {
	"Defias Prisoner",
	"Stormwind Stockade",
	"enUS",
	},
	[1707] = {
	"Defias Captive",
	"Stormwind Stockade",
	"enUS",
	},
	[1708] = {
	"Defias Inmate",
	"Stormwind Stockade",
	"enUS",
	},
	[1711] = {
	"Defias Convict",
	"Stormwind Stockade",
	"enUS",
	},
	[163126] = {
	"Brittlebone Mage",
	"The Necrotic Wake",
	},
	[1715] = {
	"Defias Insurgent",
	"Stormwind Stockade",
	"enUS",
	},
	[4810] = {
	"Twilight Reaver",
	"Blackfathom Deeps",
	"enUS",
	},
	[4814] = {
	"Twilight Elementalist",
	"Blackfathom Deeps",
	"enUS",
	},
	[4818] = {
	"Blindlight Murloc",
	"Blackfathom Deeps",
	"enUS",
	},
	[163894] = {
	"Blighted Spinebreaker",
	"Plaguefall",
	},
	[1720] = {
	"Bruegal Ironknuckle",
	"Stormwind Stockade",
	"enUS",
	},
	[4830] = {
	"Old Serra'kis",
	"Blackfathom Deeps",
	"enUS",
	},
	[1725] = {
	"Defias Watchman",
	"Deadmines",
	"enUS",
	},
	[162744] = {
	"Nekthara the Mangler",
	"Theater of Pain",
	},
	[218242] = {
	"STX-04/BD",
	"Gnomeregan",
	"enUS",
	},
	[163128] = {
	"Zolramus Sorcerer",
	"The Necrotic Wake",
	},
	[1731] = {
	"Goblin Craftsman",
	"Deadmines",
	"enUS",
	},
	[1732] = {
	"Defias Squallshaper",
	"Deadmines",
	"enUS",
	},
	[218243] = {
	"STX-13/LL",
	"Gnomeregan",
	"enUS",
	},
	[218244] = {
	"STX-25/NB",
	"Gnomeregan",
	"enUS",
	},
	[217733] = {
	"Caverndeep Pillager",
	"Gnomeregan",
	"enUS",
	},
	[164921] = {
	"Drust Harvester",
	"Mists of Tirna Scithe",
	},
	[218245] = {
	"STX-37/CN",
	"Gnomeregan",
	"enUS",
	},
	[4958] = {
	"Haunting Spirit",
	"Shadowfang Keep",
	"enUS",
	},
	[8035] = {
	"Dark Iron Land Mine",
	"Gnomeregan",
	"enUS",
	},
	[167607] = {
	"Stoneborn Slasher",
	"Halls of Atonement",
	},
	[209678] = {
	"Twilight Lord Kelris",
	"Blackfathom Deeps",
	"enUS",
	},
	[168886] = {
	"Virulax Blightweaver",
	"Plaguefall",
	},
	[1763] = {
	"Gilnid",
	"Deadmines",
	"enUS",
	},
	[165946] = {
	"Mordretha, the Endless Empress",
	"Theater of Pain",
	},
	[83613] = {
	"Koramar",
	"Iron Docks",
	},
	[2529] = {
	"Son of Arugal",
	"Shadowfang Keep",
	"enUS",
	},
	[152009] = {
	"Malfunctioning Scrapbot",
	"Operation: Mechagon",
	},
	[172981] = {
	"Kyrian Stitchwerk",
	"The Necrotic Wake",
	},
	[164414] = {
	"Reanimated Mage",
	"The Necrotic Wake",
	},
	[167612] = {
	"Stoneborn Reaver",
	"Halls of Atonement",
	},
	[114624] = {
	"Arcane Warden",
	"Return to Karazhan",
	},
	[176565] = {
	"Disruptive Patron",
	"Tazavesh, the Veiled Market",
	},
	[165824] = {
	"Nar'zudah",
	"The Necrotic Wake",
	},
	[167998] = {
	"Portal Guardian",
	"Theater of Pain",
	},
	[6233] = {
	"Mechanized Sentry",
	"Gnomeregan",
	"enUS",
	},
	[3636] = {
	"Deviate Ravager",
	"Wailing Caverns",
	"enUS",
	},
	[3640] = {
	"Evolving Ectoplasm",
	"Wailing Caverns",
	"enUS",
	},
	[7206] = {
	"Ancient Stone Keeper",
	"Uldaman",
	"enUS",
	},
	[150251] = {
	"Pistonhead Mechanic",
	"Operation: Mechagon",
	},
	[3654] = {
	"Mutanus the Devourer",
	"Wailing Caverns",
	"enUS",
	},
	[114626] = {
	"Forlorn Spirit",
	"Return to Karazhan",
	},
	[209815] = {
	"Phantasmal Priestess",
	"Blackfathom Deeps",
	"enUS",
	},
	[4292] = {
	"Scarlet Protector",
	"Scarlet Monastery",
	"enUS",
	},
	[4861] = {
	"Shrike Bat",
	"Uldaman",
	"enUS",
	},
	[7209] = {
	"Obsidian Shard",
	"Uldaman",
	"enUS",
	},
	[7328] = {
	"Withered Reaver",
	"Razorfen Downs",
	"enUS",
	},
	[7332] = {
	"Withered Spearhide",
	"Razorfen Downs",
	"enUS",
	},
	[3670] = {
	"Lord Pythas",
	"Wailing Caverns",
	"enUS",
	},
	[7340] = {
	"Skeletal Shadowcaster",
	"Razorfen Downs",
	"enUS",
	},
	[205724] = {
	"Blackfathom Tendril",
	"Blackfathom Deeps",
	"enUS",
	},
	[7348] = {
	"Thorn Eater Ghoul",
	"Razorfen Downs",
	"enUS",
	},
	[4283] = {
	"Scarlet Sentry",
	"Scarlet Monastery",
	"enUS",
	},
	[4287] = {
	"Scarlet Gallant",
	"Scarlet Monastery",
	"enUS",
	},
	[4291] = {
	"Scarlet Diviner",
	"Scarlet Monastery",
	"enUS",
	},
	[4295] = {
	"Scarlet Myrmidon",
	"Scarlet Monastery",
	"enUS",
	},
	[4299] = {
	"Scarlet Chaplain",
	"Scarlet Monastery",
	"enUS",
	},
	[4303] = {
	"Scarlet Abbot",
	"Scarlet Monastery",
	"enUS",
	},
	[4278] = {
	"Commander Springvale",
	"Shadowfang Keep",
	"enUS",
	},
	[7023] = {
	"Obsidian Sentinel",
	"Uldaman",
	"enUS",
	},
	[218974] = {
	"STX-99/XD",
	"Gnomeregan",
	"enUS",
	},
	[7012] = {
	"Earthen Sculptor",
	"Uldaman",
	"enUS",
	},
	[218970] = {
	"STX-97/IC",
	"Gnomeregan",
	"enUS",
	},
	[219110] = {
	"Incendiary Bomb",
	"Gnomeregan",
	"enUS",
	},
	[213334] = {
	"Aku'mai",
	"Blackfathom Deeps",
	"enUS",
	},
	[646] = {
	"Mr. Smite",
	"Deadmines",
	"enUS",
	},
	[83389] = {
	"Ironwing Flamespitter",
	"Iron Docks",
	},
	[215108] = {
	"Aku'mai Snapjaw",
	"Blackfathom Deeps",
	"enUS",
	},
	[163520] = {
	"Forsworn Squad-Leader",
	"Spires of Ascension",
	},
	[4798] = {
	"Fallenroot Shadowstalker",
	"Blackfathom Deeps",
	"enUS",
	},
	[4978] = {
	"Aku'mai Servant",
	"Blackfathom Deeps",
	"enUS",
	},
	[115419] = {
	"Ancient Tome",
	"Return to Karazhan",
	},
	[4822] = {
	"Snapping Crustacean",
	"Blackfathom Deeps",
	"enUS",
	},
	[114628] = {
	"Skeletal Waiter",
	"Return to Karazhan",
	},
	[167876] = {
	"Inquisitor Sigar",
	"Halls of Atonement",
	},
	[214612] = {
	"Aku'mai Fisher",
	"Blackfathom Deeps",
	"enUS",
	},
	[165430] = {
	"Malignant Spawn",
	"Plaguefall",
	},
	[148120] = {
	"Kul Tiran Marine",
	"Battle of Dazar'alor",
	},
	[4625] = {
	"Death's Head Ward Keeper",
	"Razorfen Kraul",
	"enUS",
	},
	[167493] = {
	"Venomous Sniper",
	"Plaguefall",
	},
	[170690] = {
	"Diseased Horror",
	"Theater of Pain",
	},
	[5058] = {
	"Wolfguard Worg",
	"Shadowfang Keep",
	"enUS",
	},
	[7603] = {
	"Leprous Assistant",
	"Gnomeregan",
	"enUS",
	},
	[6223] = {
	"Leprous Defender",
	"Gnomeregan",
	"enUS",
	},
	[179386] = {
	"Corsair Officer",
	"Tazavesh, the Veiled Market",
	},
	[185680] = {
	"Vy Relic",
	"The Necrotic Wake",
	},
	[155090] = {
	"Anodized Coilbearer",
	"Operation: Mechagon",
	},
	[6220] = {
	"Irradiated Horror",
	"Gnomeregan",
	"enUS",
	},
	[4427] = {
	"Ward Guardian",
	"Razorfen Kraul",
	"enUS",
	},
	[114629] = {
	"Spectral Retainer",
	"Return to Karazhan",
	},
	[4435] = {
	"Razorfen Warrior",
	"Razorfen Kraul",
	"enUS",
	},
	[4279] = {
	"Odo the Blindwatcher",
	"Shadowfang Keep",
	"enUS",
	},
	[167111] = {
	"Spinemaw Staghorn",
	"Mists of Tirna Scithe",
	},
	[8886] = {
	"Deviate Python",
	"Wailing Caverns",
	"enUS",
	},
	[217280] = {
	"Grubbis",
	"Gnomeregan",
	"enUS",
	},
	[6329] = {
	"Irradiated Pillager",
	"Gnomeregan",
	"enUS",
	},
	[115765] = {
	"Abstract Nullifier",
	"Return to Karazhan",
	},
	[177889] = {
	"Mawforged Souljudge",
	"Sanctum of Domination",
	},
	[169905] = {
	"Risen Warlord",
	"De Other Side",
	},
	[642] = {
	"Sneed's Shredder",
	"Deadmines",
	"enUS",
	},
	[82597] = {
	"Grom'kar Captain",
	"Grimrail Depot",
	},
	[204068] = {
	"Lady Sarevess",
	"Blackfathom Deeps",
	"enUS",
	},
	[162049] = {
	"Vestige of Doubt",
	"Sanguine Depths",
	},
	[79720] = {
	"Grom'kar Boomer",
	"Grimrail Depot",
	},
	[150169] = {
	"Toxic Lurker",
	"Operation: Mechagon",
	},
	[115486] = {
	"Erudite Slayer",
	"Return to Karazhan",
	},
	[80935] = {
	"Grom'kar Boomer",
	"Grimrail Depot",
	},
	[150297] = {
	"Mechagon Renormalizer",
	"Operation: Mechagon",
	},
	[83392] = {
	"Rampaging Clefthoof",
	"Iron Docks",
	},
	[4511] = {
	"Agam'ar",
	"Razorfen Kraul",
	"enUS",
	},
	[4515] = {
	"Death's Head Acolyte",
	"Razorfen Kraul",
	"enUS",
	},
	[4519] = {
	"Death's Head Seer",
	"Razorfen Kraul",
	"enUS",
	},
	[4523] = {
	"Razorfen Groundshaker",
	"Razorfen Kraul",
	"enUS",
	},
	[163459] = {
	"Forsworn Mender",
	"Spires of Ascension",
	},
	[169927] = {
	"Putrid Butcher",
	"Theater of Pain",
	},
	[4535] = {
	"Tamed Battleboar",
	"Razorfen Kraul",
	"enUS",
	},
	[4539] = {
	"Greater Kraul Bat",
	"Razorfen Kraul",
	"enUS",
	},
	[4543] = {
	"Bloodmage Thalnos",
	"Scarlet Monastery",
	"enUS",
	},
	[168393] = {
	"Plaguebelcher",
	"Plaguefall",
	},
	[116549] = {
	"Backup Singer",
	"Return to Karazhan",
	},
	[164557] = {
	"Shard of Halkias",
	"Halls of Atonement",
	},
	[77803] = {
	"Railmaster Rocketspark",
	"Grimrail Depot",
	},
	[80936] = {
	"Grom'kar Grenadier",
	"Grimrail Depot",
	},
	[166589] = {
	"Animated Weapon",
	"Sanguine Depths",
	},
	[3680] = {
	"Serpentbloom Snake",
	"Wailing Caverns",
	"enUS",
	},
	[165197] = {
	"Skeletal Monstrosity",
	"The Necrotic Wake",
	},
	[165137] = {
	"Zolramus Gatekeeper",
	"The Necrotic Wake",
	},
	[164929] = {
	"Tirnenn Villager",
	"Mists of Tirna Scithe",
	},
	[77483] = {
	"Grom'kar Gunner",
	"Grimrail Depot",
	},
	[209209] = {
	"Blackfathom Elite",
	"Blackfathom Deeps",
	"enUS",
	},
	[3976] = {
	"Scarlet Commander Mograine",
	"Scarlet Monastery",
	"enUS",
	},
	[169861] = {
	"Ickor Bileflesh",
	"Plaguefall",
	},
	[114312] = {
	"Moroes",
	"Return to Karazhan",
	},
	[3840] = {
	"Druid of the Fang",
	"Wailing Caverns",
	"enUS",
	},
	[163086] = {
	"Rancid Gasbag",
	"Theater of Pain",
	},
	[207397] = {
	"Corrupted Windfury Totem",
	"Blackfathom Deeps",
	"enUS",
	},
	[4627] = {
	"Arugal's Voidwalker",
	"Shadowfang Keep",
	"enUS",
	},
	[111563] = {
	"Duskwatch Guard",
	"Court of Stars",
	},
	[3850] = {
	"Sorcerer Ashcrombe",
	"Shadowfang Keep",
	"enUS",
	},
	[177816] = {
	"Interrogation Specialist",
	"Tazavesh, the Veiled Market",
	},
	[3854] = {
	"Shadowfang Wolfguard",
	"Shadowfang Keep",
	"enUS",
	},
	[5048] = {
	"Deviate Adder",
	"Wailing Caverns",
	"enUS",
	},
	[168396] = {
	"Plaguebelcher",
	"Plaguefall",
	},
	[3669] = {
	"Lord Cobrahn",
	"Wailing Caverns",
	"enUS",
	},
	[3862] = {
	"Slavering Worg",
	"Shadowfang Keep",
	"enUS",
	},
	[3864] = {
	"Fel Steed",
	"Shadowfang Keep",
	"enUS",
	},
	[3866] = {
	"Vile Bat",
	"Shadowfang Keep",
	"enUS",
	},
	[3868] = {
	"Blood Seeker",
	"Shadowfang Keep",
	"enUS",
	},
	[151773] = {
	"Junkyard D.0.G.",
	"Operation: Mechagon",
	},
	[3872] = {
	"Deathsworn Captain",
	"Shadowfang Keep",
	"enUS",
	},
	[657] = {
	"Defias Pirate",
	"Deadmines",
	"enUS",
	},
	[3673] = {
	"Lord Serpentis",
	"Wailing Caverns",
	"enUS",
	},
	[3674] = {
	"Skum",
	"Wailing Caverns",
	"enUS",
	},
	[114633] = {
	"Spectral Valet",
	"Return to Karazhan",
	},
	[7342] = {
	"Skeletal Summoner",
	"Razorfen Downs",
	"enUS",
	},
	[88163] = {
	"Grom'kar Cinderseer",
	"Grimrail Depot",
	},
	[3886] = {
	"Razorclaw the Butcher",
	"Shadowfang Keep",
	"enUS",
	},
	[7344] = {
	"Splinterbone Warrior",
	"Razorfen Downs",
	"enUS",
	},
	[4831] = {
	"Lady Sarevess",
	"Blackfathom Deeps",
	"enUS",
	},
	[170572] = {
	"Atal'ai Hoodoo Hexxer",
	"De Other Side",
	},
	[164562] = {
	"Depraved Houndmaster",
	"Halls of Atonement",
	},
	[7352] = {
	"Frozen Soul",
	"Razorfen Downs",
	"enUS",
	},
	[7358] = {
	"Amnennar the Coldbringer",
	"Razorfen Downs",
	"enUS",
	},
	[80937] = {
	"Grom'kar Gunner",
	"Grimrail Depot",
	},
	[174773] = {
	"Spiteful Shade",
	"Sanguine Depths",
	},
	[4418] = {
	"Defias Wizard",
	"Deadmines",
	"enUS",
	},
	[5762] = {
	"Deviate Moccasin",
	"Wailing Caverns",
	"enUS",
	},
	[4821] = {
	"Skittering Crustacean",
	"Blackfathom Deeps",
	"enUS",
	},
	[162763] = {
	"Soulforged Bonereaver",
	"Theater of Pain",
	},
	[114634] = {
	"Undying Servant",
	"Return to Karazhan",
	},
	[3914] = {
	"Rethilgore",
	"Shadowfang Keep",
	"enUS",
	},
	[179269] = {
	"Oasis Security",
	"Tazavesh, the Veiled Market",
	},
	[8567] = {
	"Glutton",
	"Razorfen Downs",
	"enUS",
	},
	[163157] = {
	"Amarth",
	"The Necrotic Wake",
	},
	[3637] = {
	"Deviate Guardian",
	"Wailing Caverns",
	"enUS",
	},
	[4286] = {
	"Scarlet Soldier",
	"Scarlet Monastery",
	"enUS",
	},
	[179821] = {
	"Commander Zo'far",
	"Tazavesh, the Veiled Market",
	},
	[4274] = {
	"Fenrus the Devourer",
	"Shadowfang Keep",
	"enUS",
	},
	[80808] = {
	"Neesa Nox",
	"Iron Docks",
	},
	[151649] = {
	"Defense Bot Mk I",
	"Operation: Mechagon",
	},
	[165076] = {
	"Gluttonous Tick",
	"Sanguine Depths",
	},
	[4799] = {
	"Fallenroot Hellcaller",
	"Blackfathom Deeps",
	"enUS",
	},
	[4531] = {
	"Razorfen Beast Trainer",
	"Razorfen Kraul",
	"enUS",
	},
	[4807] = {
	"Blackfathom Myrmidon",
	"Blackfathom Deeps",
	"enUS",
	},
	[4811] = {
	"Twilight Aquamancer",
	"Blackfathom Deeps",
	"enUS",
	},
	[4815] = {
	"Murkshallow Snapclaw",
	"Blackfathom Deeps",
	"enUS",
	},
	[4819] = {
	"Blindlight Muckdweller",
	"Blackfathom Deeps",
	"enUS",
	},
	[4823] = {
	"Barbed Crustacean",
	"Blackfathom Deeps",
	"enUS",
	},
	[4827] = {
	"Deep Pool Threshfin",
	"Blackfathom Deeps",
	"enUS",
	},
	[171343] = {
	"Bladebeak Matriarch",
	"De Other Side",
	},
	[114632] = {
	"Spectral Attendant",
	"Return to Karazhan",
	},
	[168446] = {
	"Skeletal Monstrosity",
	"The Necrotic Wake",
	},
	[168658] = {
	"Forsworn Devastator",
	"Spires of Ascension",
	},
	[4847] = {
	"Shadowforge Relic Hunter",
	"Uldaman",
	"enUS",
	},
	[114792] = {
	"Virtuous Lady",
	"Return to Karazhan",
	},
	[218972] = {
	"STX-98/PO",
	"Gnomeregan",
	"enUS",
	},
	[114316] = {
	"Baroness Dorothea Millstipe",
	"Return to Karazhan",
	},
	[4863] = {
	"Jadespine Basilisk",
	"Uldaman",
	"enUS",
	},
	[4623] = {
	"Quilguard Champion",
	"Razorfen Kraul",
	"enUS",
	},
	[207356] = {
	"Lorgus Jett",
	"Blackfathom Deeps",
	"enUS",
	},
	[3974] = {
	"Houndmaster Loksey",
	"Scarlet Monastery",
	"enUS",
	},
	[114636] = {
	"Phantom Guardsman",
	"Return to Karazhan",
	},
	[146409] = {
	"Lady Jaina Proudmoore",
	"Battle of Dazar'alor",
	},
	[4887] = {
	"Ghamoo-ra",
	"Blackfathom Deeps",
	"enUS",
	},
	[163524] = {
	"Kyrian Dark-Praetor",
	"Spires of Ascension",
	},
	[174197] = {
	"Battlefield Ritualist",
	"Theater of Pain",
	},
	[162103] = {
	"Executor Tarvold",
	"Sanguine Depths",
	},
	[115020] = {
	"Arcanid",
	"Return to Karazhan",
	},
	[4420] = {
	"Overlord Ramtusk",
	"Razorfen Kraul",
	"enUS",
	},
	[217308] = {
	"Irradiated Goo",
	"Gnomeregan",
	"enUS",
	},
	[4422] = {
	"Agathelos the Raging",
	"Razorfen Kraul",
	"enUS",
	},
	[4438] = {
	"Razorfen Spearhide",
	"Razorfen Kraul",
	"enUS",
	},
	[114317] = {
	"Lady Catriona Von'Indi",
	"Return to Karazhan",
	},
	[164185] = {
	"Echelon",
	"Halls of Atonement",
	},
	[179388] = {
	"Hourglass Tidesage",
	"Tazavesh, the Veiled Market",
	},
	[81283] = {
	"Grom'kar Footsoldier",
	"Iron Docks",
	},
	[115488] = {
	"Infused Pyromancer",
	"Return to Karazhan",
	},
	[114637] = {
	"Spectral Sentry",
	"Return to Karazhan",
	},
	[168627] = {
	"Plaguebinder",
	"Plaguefall",
	},
	[82590] = {
	"Grimrail Scout",
	"Grimrail Depot",
	},
	[163862] = {
	"Defender of Many Eyes",
	"Plaguefall",
	},
	[1729] = {
	"Defias Evoker",
	"Deadmines",
	"enUS",
	},
	[155434] = {
	"Emissary of the Tides",
	"Freehold",
	},
	[3450] = {
	"Defias Companion",
	"Deadmines",
	"enUS",
	},
	[173447] = {
	"Mushroom Mine",
	"Plaguefall",
	},
	[164506] = {
	"Ancient Captain",
	"Theater of Pain",
	},
	[5097] = {
	"Lupine Delusion",
	"Shadowfang Keep",
	"enUS",
	},
	[4289] = {
	"Scarlet Evoker",
	"Scarlet Monastery",
	"enUS",
	},
	[168992] = {
	"Risen Cultist",
	"De Other Side",
	},
	[1717] = {
	"Hamhock",
	"Stormwind Stockade",
	"enUS",
	},
	[1716] = {
	"Bazil Thredd",
	"Stormwind Stockade",
	"enUS",
	},
	[7357] = {
	"Mordresh Fire Eye",
	"Razorfen Downs",
	"enUS",
	},
	[146753] = {
	"Kul Tiran Marine",
	"Battle of Dazar'alor",
	},
	[3861] = {
	"Bleak Worg",
	"Shadowfang Keep",
	"enUS",
	},
	[179842] = {
	"Commerce Enforcer",
	"Tazavesh, the Veiled Market",
	},
	[7349] = {
	"Tomb Fiend",
	"Razorfen Downs",
	"enUS",
	},
	[4275] = {
	"Archmage Arugal",
	"Shadowfang Keep",
	"enUS",
	},
	[81235] = {
	"Grimrail Laborer",
	"Grimrail Depot",
	},
	[165919] = {
	"Skeletal Marauder",
	"The Necrotic Wake",
	},
	[202839] = {
	"Riptide Elemental",
	"Blackfathom Deeps",
	"enUS",
	},
	[150250] = {
	"Pistonhead Blaster",
	"Operation: Mechagon",
	},
	[185685] = {
	"Urh Relic",
	"The Necrotic Wake",
	},
	[6066] = {
	"Earthgrab Totem",
	"Razorfen Kraul",
	"enUS",
	},
	[151657] = {
	"Bomb Tonk",
	"Operation: Mechagon",
	},
	[114319] = {
	"Lady Keira Berrybuck",
	"Return to Karazhan",
	},
	[5055] = {
	"Deviate Lasher",
	"Wailing Caverns",
	"enUS",
	},
	[218344] = {
	"Explosive Egg",
	"Gnomeregan",
	"enUS",
	},
	[174210] = {
	"Blighted Sludge-Spewer",
	"Theater of Pain",
	},
	[80816] = {
	"Ahri'ok Dugru",
	"Iron Docks",
	},
	[204645] = {
	"Blackfathom Elite",
	"Blackfathom Deeps",
	"enUS",
	},
	},
	["aura_grow_direction"] = 1,
	["indicator_anchor"] = {
	["x"] = 0,
	},
	["health_selection_overlay_alpha"] = 0.199999988079071,
	["minor_height_scale"] = 0.9999999403953552,
	["aura_padding"] = 0.7999999523162842,
	["last_news_time"] = 1550158598,
	["aura_width2"] = 22,
	["aura_stack_size"] = 9,
	["aura_height2"] = 14,
	["aura_show_crowdcontrol"] = true,
	["extra_icon_timer_outline"] = "OUTLINE",
	["aura_border_colors"] = {
	["enrage"] = {
	0,
	0,
	0,
	},
	["steal_or_purge"] = {
	0.27843137254902,
	0.92156862745098,
	0.98039215686275,
	},
	["crowdcontrol"] = {
	0,
	0,
	0,
	},
	["offensive"] = {
	nil,
	0,
	0,
	},
	["is_show_all"] = {
	0,
	0,
	0,
	},
	["defensive"] = {
	0,
	0,
	0,
	},
	["is_buff"] = {
	nil,
	0,
	0,
	},
	},
	["class_colors"] = {
	["DEATHKNIGHT"] = {
	["colorStr"] = "ffc31d3a",
	},
	["WARRIOR"] = {
	["colorStr"] = "ffc69a6d",
	},
	["PALADIN"] = {
	["colorStr"] = "fff48bb9",
	},
	["WARLOCK"] = {
	["colorStr"] = "ff8687ed",
	},
	["DEMONHUNTER"] = {
	["colorStr"] = "ffa22fc8",
	},
	["ROGUE"] = {
	["colorStr"] = "fffff467",
	},
	["DRUID"] = {
	["colorStr"] = "ffff7c09",
	},
	["EVOKER"] = {
	["colorStr"] = "ff33937e",
	},
	["SHAMAN"] = {
	["colorStr"] = "ff006fdd",
	},
	},
	["extra_icon_anchor"] = {
	["y"] = -13,
	["x"] = 0,
	["side"] = 8,
	},
	["extra_icon_wide_icon"] = false,
	["range_check_alpha"] = 1,
	["semver"] = "1.0.1",
	["aura_frame2_anchor"] = {
	["y"] = 31.09999084472656,
	["x"] = -0.600006103515625,
	["side"] = 3,
	},
	["cast_statusbar_texture"] = "Melli",
	["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
	["debuff_show_cc"] = false,
	["transparency_behavior"] = 3,
	["spell_animations"] = false,
	["debuff_show_cc_border"] = {
	0,
	0,
	0,
	},
	["aura_consolidate"] = true,
	["extra_icon_width"] = 26,
	["health_statusbar_texture"] = "Melli",
	["hook_auto_imported"] = {
	["Reorder Nameplate"] = 4,
	["Targetting Alpha"] = 3,
	["Dont Have Aura"] = 1,
	["Players Targetting Amount"] = 4,
	["Color Automation"] = 1,
	["Bwonsamdi Reaping"] = 1,
	["Execute Range"] = 1,
	["Jaina Encounter"] = 6,
	["Blockade Encounter"] = 1,
	["Cast Bar Icon Config"] = 2,
	["Combo Points"] = 6,
	["Hide Neutral Units"] = 1,
	["Extra Border"] = 2,
	["Target Color"] = 3,
	["Aura Reorder"] = 3,
	["Attacking Specific Unit"] = 2,
	},
	["minor_width_scale"] = 0.9999999403953552,
	["indicator_pet"] = false,
	["color_lerp_speed"] = 7,
	["aura_frame1_anchor"] = {
	["y"] = 7.5,
	["x"] = 0.8699951171875,
	["side"] = 7,
	},
	["honor_blizzard_plate_alpha"] = true,
	["indicator_rare"] = false,
	["extra_icon_stack_font"] = "GothamNarrowUltra",
	["aura_height"] = 14,
	["non_targeted_alpha_enabled"] = true,
	["cast_statusbar_bgtexture"] = "Melli",
	["aura2_x_offset"] = -0.600006103515625,
	["target_indicator"] = "Double Arrows",
	["saved_cvars"] = {
	["nameplateShowOnlyNames"] = "1",
	["nameplateOverlapV"] = "1.1",
	["nameplateLargeTopInset"] = "0.089999996125698",
	["nameplateShowEnemyMinus"] = "1",
	["NamePlateClassificationScale"] = "1",
	["nameplateShowFriendlyTotems"] = "0",
	["nameplatePersonalHideDelaySeconds"] = "0.2",
	["nameplateShowFriendlyPets"] = "0",
	["nameplatePersonalShowInCombat"] = "1",
	["nameplateTargetRadialPosition"] = "1",
	["nameplateMinAlpha"] = "0.90135484",
	["nameplateResourceOnTarget"] = "0",
	["nameplateNotSelectedAlpha"] = "1",
	["clampTargetNameplateToScreen"] = "1",
	["nameplateShowAll"] = "1",
	["nameplateMaxDistance"] = "41",
	["nameplateShowFriendlyMinions"] = "0",
	["nameplateSelfScale"] = "1",
	["nameplateTargetBehindMaxDistance"] = "30",
	["nameplateShowEnemies"] = "1",
	["NamePlateVerticalScale"] = "1",
	["nameplateSelectedAlpha"] = "1",
	["nameplateShowSelf"] = "0",
	["nameplatePersonalShowAlways"] = "0",
	["nameplateMotionSpeed"] = "0.049999997019768",
	["nameplateGlobalScale"] = "1",
	["nameplateShowEnemyMinions"] = "1",
	["nameplateShowEnemyPets"] = "0",
	["nameplateShowFriendlyNPCs"] = "0",
	["nameplateSelectedScale"] = "1.1499999761581",
	["nameplateRemovalAnimation"] = "1",
	["nameplateShowFriends"] = "0",
	["nameplateMinAlphaDistance"] = "-158489.31924611",
	["nameplateMotion"] = "1",
	["ShowNamePlateLoseAggroFlash"] = "1",
	["nameplateMinScale"] = "1",
	["nameplateOccludedAlphaMult"] = "0.4",
	["nameplateOtherTopInset"] = "0.089999996125698",
	["nameplateSelfAlpha"] = "1",
	["nameplateSelfBottomInset"] = "0.2",
	["nameplateShowEnemyTotems"] = "0",
	["nameplateShowFriendlyGuardians"] = "0",
	["nameplateShowEnemyGuardians"] = "0",
	["NamePlateHorizontalScale"] = "1",
	["ShowClassColorInNameplate"] = "1",
	["nameplateSelfTopInset"] = "0.5",
	["nameplatePersonalShowWithTarget"] = "0",
	},
	["login_counter"] = 19625,
	["extra_icon_caster_name"] = false,
	["aura_cooldown_show_swipe"] = false,
	["aura_stack_font"] = "Naowh",
	["auto_toggle_combat"] = {
	["blizz_healthbar_ic"] = true,
	["blizz_healthbar_ooc"] = true,
	},
	["hide_friendly_castbars"] = true,
	["OptionsPanelDB"] = {
	["PlaterOptionsPanelFrame"] = {
	["scale"] = 1,
	},
	},
	["cast_color_settings"] = {
	["enabled"] = true,
	["width"] = 12,
	},
	["auras_per_row_amount"] = 4,
	["hover_highlight_alpha"] = 0.199999988079071,
	["usePlaterWidget"] = false,
	["plate_config"] = {
	["player"] = {
	["spellpercent_text_font"] = "10089",
	["level_text_size"] = 11,
	["cast"] = {
	115,
	8,
	},
	["spellpercent_text_anchor"] = {
	["x"] = 2,
	["side"] = 5,
	},
	["big_actorname_text_shadow_color"] = {
	0,
	0,
	0,
	1,
	},
	["level_text_font"] = "10089",
	["actorname_text_font"] = "10089",
	["big_actorname_text_shadow_color_offset"] = {
	1,
	-1,
	},
	["mana_incombat"] = {
	100,
	4,
	},
	["all_names"] = true,
	["big_actortitle_text_outline"] = "OUTLINE",
	["actorname_text_spacing"] = 12,
	["quest_color_enemy"] = {
	1,
	0.369,
	0,
	},
	["big_actortitle_text_font"] = "10089",
	["spellpercent_text_size"] = 11,
	["big_actortitle_text_shadow_color_offset"] = {
	1,
	-1,
	},
	["percent_text_color"] = {
	0.93725490196078,
	0.97647058823529,
	1,
	},
	["cast_incombat"] = {
	115,
	8,
	},
	["big_actortitle_text_size"] = 10,
	["big_actorname_text_size"] = 10,
	["spellname_text_anchor"] = {
	["side"] = 3,
	},
	["big_actortitle_text_shadow_color"] = {
	0,
	0,
	0,
	1,
	},
	["spellname_text_font"] = "10089",
	["big_actorname_text_outline"] = "OUTLINE",
	["quest_color_neutral"] = {
	1,
	0.65,
	0,
	},
	["mana"] = {
	100,
	4,
	},
	["power_percent_text_font"] = "Accidental Presidency",
	["level_text_alpha"] = 1,
	["percent_text_size"] = 11,
	["percent_text_font"] = "10089",
	["spellname_text_size"] = 12,
	["quest_enabled"] = true,
	["actorname_text_color"] = {
	nil,
	nil,
	nil,
	0.86789692938328,
	},
	["big_actorname_text_font"] = "10089",
	["health_incombat"] = {
	115,
	15,
	},
	["health"] = {
	115,
	15,
	},
	["power_percent_text_size"] = 8,
	["actorname_text_anchor"] = {
	["y"] = 1,
	["side"] = 1,
	},
	["actorname_text_size"] = 13,
	["level_text_enabled"] = true,
	},
	["friendlyplayer"] = {
	["big_actorname_text_size"] = 9,
	["spellpercent_text_font"] = "AvantGarde",
	["level_text_size"] = 9,
	["actorname_use_class_color"] = true,
	["cast"] = {
	50,
	7,
	},
	["spellpercent_text_anchor"] = {
	["y"] = -7.980003356933594,
	["x"] = 1.009994506835938,
	},
	["spellname_text_outline"] = "OUTLINE",
	["big_actorname_text_shadow_color"] = {
	0,
	0,
	0,
	1,
	},
	["level_text_font"] = "AvantGarde",
	["percent_text_color"] = {
	0.93725490196078,
	0.97647058823529,
	1,
	},
	["actorname_text_font"] = "Naowh",
	["big_actorname_text_shadow_color_offset"] = {
	1,
	-1,
	},
	["mana_incombat"] = {
	nil,
	4,
	},
	["actorname_use_guild_color"] = false,
	["all_names"] = true,
	["big_actortitle_text_outline"] = "OUTLINE",
	["actorname_text_spacing"] = 9,
	["only_damaged"] = false,
	["quest_color_enemy"] = {
	1,
	0.369,
	0,
	},
	["only_thename"] = true,
	["big_actortitle_text_font"] = "AvantGarde",
	["spellpercent_text_size"] = 8,
	["level_text_anchor"] = {
	["y"] = 2.519996643066406,
	["x"] = 1.489997863769531,
	},
	["big_actortitle_text_shadow_color_offset"] = {
	1,
	-1,
	},
	["level_text_alpha"] = 1,
	["cast_incombat"] = {
	105,
	7,
	},
	["actorname_text_shadow_color"] = {
	nil,
	nil,
	nil,
	0,
	},
	["spellname_text_anchor"] = {
	["y"] = -7.980003356933594,
	["x"] = -1.010002136230469,
	["side"] = 10,
	},
	["big_actortitle_text_shadow_color"] = {
	0,
	0,
	0,
	1,
	},
	["percent_text_anchor"] = {
	["y"] = -0.4000015258789063,
	["x"] = 0.04000091552734375,
	},
	["big_actortitle_text_size"] = 9,
	["spellname_text_font"] = "AvantGarde",
	["big_actorname_text_outline"] = "OUTLINE",
	["actorname_use_friends_color"] = false,
	["quest_color_neutral"] = {
	1,
	0.65,
	0,
	},
	["mana"] = {
	nil,
	4,
	},
	["power_percent_text_font"] = "Accidental Presidency",
	["actorname_text_anchor"] = {
	["y"] = 9.799995422363281,
	["x"] = -0.8300018310546875,
	["side"] = 9,
	},
	["percent_text_size"] = 8,
	["percent_text_ooc"] = true,
	["percent_text_font"] = "Naowh",
	["buff_frame_y_offset"] = 0,
	["quest_enabled"] = true,
	["big_actorname_text_font"] = "AvantGarde",
	["actorname_text_color"] = {
	nil,
	nil,
	nil,
	0.87000000476837,
	},
	["health_incombat"] = {
	142,
	16,
	},
	["health"] = {
	124,
	12,
	},
	["percent_text_enabled"] = true,
	["spellpercent_text_enabled"] = true,
	["spellname_text_size"] = 8,
	},
	["friendlynpc"] = {
	["actorname_use_friends_color"] = true,
	["spellpercent_text_font"] = "Naowh",
	["show_guild_name"] = false,
	["level_text_size"] = 9,
	["actorname_use_class_color"] = false,
	["cast"] = {
	105,
	6,
	},
	["fixed_class_color"] = {
	0,
	1,
	0,
	},
	["spellpercent_text_anchor"] = {
	["y"] = -7.980003356933594,
	["x"] = 1.009994506835938,
	},
	["actorname_text_color"] = {
	nil,
	nil,
	nil,
	0.87000000476837,
	},
	["percent_text_show_decimals"] = false,
	["spellname_text_outline"] = "OUTLINE",
	["click_through"] = true,
	["level_text_font"] = "Naowh",
	["actorname_text_font"] = "Naowh",
	["actorname_use_guild_color"] = true,
	["actorname_text_outline"] = "OUTLINE",
	["actorname_text_spacing"] = 8,
	["only_damaged"] = false,
	["quest_color_enemy"] = {
	1,
	0.369,
	0,
	},
	["only_thename"] = true,
	["big_actortitle_text_font"] = "Naowh",
	["spellpercent_text_size"] = 8,
	["percent_text_enabled"] = true,
	["level_text_anchor"] = {
	["y"] = 2.519996643066406,
	["x"] = 1.489997863769531,
	},
	["cast_incombat"] = {
	105,
	6,
	},
	["actorname_friend_color"] = {
	0.71,
	1,
	1,
	1,
	},
	["actorname_text_shadow_color"] = {
	nil,
	nil,
	nil,
	0,
	},
	["spellname_text_anchor"] = {
	["y"] = -7.980003356933594,
	["x"] = -1.010002136230469,
	["side"] = 10,
	},
	["percent_text_anchor"] = {
	["y"] = 4.699996948242188,
	["x"] = -0.3600006103515625,
	["side"] = 5,
	},
	["spellname_text_font"] = "Naowh",
	["only_names"] = false,
	["quest_color_neutral"] = {
	1,
	0.65,
	0,
	},
	["actorname_text_size"] = 9,
	["power_percent_text_font"] = "Accidental Presidency",
	["percent_text_ooc"] = true,
	["level_text_alpha"] = 1,
	["spellpercent_text_enabled"] = true,
	["castbar_offset"] = -0.9000015258789062,
	["percent_text_font"] = "Naowh",
	["actorname_guild_color"] = {
	0.498039,
	1,
	0.2,
	1,
	},
	["big_actortitle_text_size"] = 9,
	["enabled"] = false,
	["spellname_text_size"] = 8,
	["health"] = {
	120,
	10,
	},
	["percent_text_color"] = {
	0.93725490196078,
	0.97647058823529,
	1,
	},
	["big_actorname_text_font"] = "Naowh",
	["actorname_text_anchor"] = {
	["y"] = 0.9000015258789062,
	["x"] = 0.6999969482421875,
	["side"] = 1,
	},
	["health_incombat"] = {
	nil,
	10,
	},
	},
	["enemynpc"] = {
	["castbar_offset"] = -0.9000015258789062,
	["spellpercent_text_font"] = "Naowh",
	["level_text_size"] = 10,
	["cast"] = {
	120,
	14,
	},
	["spellpercent_text_anchor"] = {
	["y"] = 0.6699981689453125,
	["x"] = 0.0099945068359375,
	},
	["percent_text_show_decimals"] = false,
	["level_text_font"] = "Naowh",
	["actorname_text_font"] = "Naowh",
	["actorname_text_outline"] = "OUTLINE",
	["actorname_text_spacing"] = 9,
	["big_actortitle_text_font"] = "Naowh",
	["spellpercent_text_size"] = 8,
	["level_text_anchor"] = {
	["y"] = -3.569999694824219,
	["x"] = 0.1100006103515625,
	["side"] = 1,
	},
	["actorname_text_anchor"] = {
	["y"] = -3.800003051757813,
	["x"] = 15.47999572753906,
	["side"] = 1,
	},
	["spellname_text_anchor"] = {
	["y"] = -0.9000015258789062,
	["x"] = 0.5,
	["side"] = 10,
	},
	["percent_text_anchor"] = {
	["y"] = -3.700004577636719,
	["x"] = -1,
	["side"] = 7,
	},
	["spellname_text_font"] = "Naowh",
	["actorname_text_size"] = 10,
	["big_actorname_text_font"] = "Naowh",
	["big_actorname_text_size"] = 9,
	["level_text_outline"] = "OUTLINE",
	["big_actortitle_text_size"] = 9,
	["level_text_alpha"] = 1,
	["spellpercent_text_enabled"] = false,
	["percent_text_font"] = "Naowh",
	["health_incombat"] = {
	nil,
	10,
	},
	["health"] = {
	120,
	10,
	},
	["percent_text_color"] = {
	1,
	1,
	1,
	},
	["power_percent_text_font"] = "Accidental Presidency",
	["percent_show_health"] = false,
	["spellname_text_size"] = 9,
	},
	["global_health_width"] = 120,
	["enemyplayer"] = {
	["castbar_offset"] = -0.9000015258789062,
	["spellpercent_text_font"] = "Naowh",
	["cast"] = {
	120,
	14,
	},
	["spellpercent_text_anchor"] = {
	["y"] = 0.6699981689453125,
	["x"] = 0.0099945068359375,
	},
	["spellname_text_outline"] = "OUTLINE",
	["level_text_font"] = "Naowh",
	["actorname_text_font"] = "Naowh",
	["all_names"] = true,
	["actorname_text_outline"] = "OUTLINE",
	["actorname_text_spacing"] = 9,
	["quest_color_enemy"] = {
	1,
	0.369,
	0,
	},
	["big_actortitle_text_font"] = "Naowh",
	["spellpercent_text_size"] = 8,
	["level_text_anchor"] = {
	["y"] = 1.199996948242188,
	["x"] = -1,
	},
	["cast_incombat"] = {
	nil,
	14,
	},
	["spellname_text_anchor"] = {
	["y"] = -0.9000015258789062,
	["x"] = 0.5,
	["side"] = 10,
	},
	["percent_text_anchor"] = {
	["y"] = -3.700004577636719,
	["x"] = -1,
	["side"] = 7,
	},
	["percent_text_color"] = {
	1,
	1,
	1,
	},
	["spellname_text_font"] = "Naowh",
	["quest_color_neutral"] = {
	1,
	0.65,
	0,
	},
	["actorname_text_size"] = 10,
	["percent_text_show_decimals"] = false,
	["big_actorname_text_font"] = "Naowh",
	["big_actortitle_text_size"] = 9,
	["level_text_outline"] = "OUTLINE",
	["percent_show_health"] = false,
	["spellpercent_text_enabled"] = false,
	["percent_text_font"] = "Naowh",
	["quest_enabled"] = true,
	["health_incombat"] = {
	nil,
	10,
	},
	["health"] = {
	120,
	10,
	},
	["power_percent_text_font"] = "Accidental Presidency",
	["level_text_alpha"] = 1,
	["spellname_text_size"] = 9,
	["actorname_text_anchor"] = {
	["y"] = -3.800003051757813,
	["x"] = 2,
	["side"] = 1,
	},
	["level_text_enabled"] = false,
	},
	["global_health_height"] = 10,
	},
	["aura_y_offset"] = 7.5,
	["use_ui_parent"] = true,
	["indicator_elite"] = false,
	["aura_width_personal"] = 23,
	["resources_settings"] = {
	["chr"] = {
	["Player-4476-04683257"] = "Runes",
	["Player-1084-0A698CF4"] = "Runes",
	["Player-4476-03BFABA5"] = "ArcaneCharges",
	["Player-1084-09D4BD91"] = "Chi",
	["Player-1084-09F19274"] = "HolyPower",
	["Player-1084-0A58A9E3"] = "SoulShards",
	["Player-4606-0049FD3E"] = "Runes",
	["Player-4618-00212028"] = "HolyPower",
	["Player-1084-0961A181"] = "Runes",
	["Player-4606-004BBAC3"] = "Runes",
	["Player-4606-0030ACFA"] = "Runes",
	["Player-1084-0A5FA399"] = "HolyPower",
	["Player-4618-002963C3"] = "Runes",
	["Player-1084-0A5C2A4F"] = "HolyPower",
	["Player-3674-09D96941"] = "Runes",
	["Player-4606-0031416A"] = "ComboPoints",
	["Player-1084-0A24293C"] = "ComboPoints",
	},
	},
	["indicator_scale"] = 0.99999994039536,
	["border_color"] = {
	nil,
	nil,
	nil,
	1,
	},
	["npc_colors"] = {
	[116549] = {
	true,
	false,
	"aqua",
	},
	[150253] = {
	true,
	false,
	"mediumslateblue",
	},
	[162047] = {
	true,
	false,
	"deepskyblue",
	},
	[173044] = {
	true,
	false,
	"aqua",
	},
	[144293] = {
	true,
	false,
	"mediumslateblue",
	},
	[114637] = {
	false,
	false,
	"deepskyblue",
	},
	[150254] = {
	false,
	false,
	"aqua",
	},
	[165076] = {
	true,
	false,
	"aqua",
	},
	[179388] = {
	true,
	false,
	"aqua",
	},
	[104246] = {
	true,
	false,
	"deepskyblue",
	},
	[151657] = {
	true,
	false,
	"aqua",
	},
	[144294] = {
	true,
	false,
	"aqua",
	},
	[115020] = {
	true,
	false,
	"mediumslateblue",
	},
	[114526] = {
	true,
	false,
	"aqua",
	},
	[114542] = {
	true,
	false,
	"mediumslateblue",
	},
	[162049] = {
	true,
	false,
	"mediumslateblue",
	},
	[114319] = {
	true,
	false,
	"deepskyblue",
	},
	[148120] = {
	false,
	false,
	"blue",
	},
	[152009] = {
	true,
	false,
	"deepskyblue",
	},
	[115419] = {
	true,
	false,
	"mediumslateblue",
	},
	[168393] = {
	true,
	false,
	"deepskyblue",
	},
	[177892] = {
	true,
	false,
	"deepskyblue",
	},
	[167533] = {
	true,
	false,
	"deepskyblue",
	},
	[89011] = {
	true,
	false,
	"aqua",
	},
	[168681] = {
	true,
	false,
	"mediumslateblue",
	},
	[165430] = {
	true,
	false,
	"deepskyblue",
	},
	[111563] = {
	true,
	false,
	"deepskyblue",
	},
	[164506] = {
	true,
	false,
	"mediumslateblue",
	},
	[79720] = {
	true,
	false,
	"magenta",
	},
	[170690] = {
	true,
	false,
	"deepskyblue",
	},
	[176396] = {
	true,
	false,
	"mediumslateblue",
	},
	[144298] = {
	true,
	false,
	"mediumslateblue",
	},
	[170850] = {
	true,
	false,
	"deepskyblue",
	},
	[174197] = {
	true,
	false,
	"aqua",
	},
	[114544] = {
	true,
	false,
	"deepskyblue",
	},
	[146753] = {
	false,
	false,
	"blue",
	},
	[86526] = {
	true,
	false,
	"deepskyblue",
	},
	[162691] = {
	true,
	false,
	"mediumslateblue",
	},
	[81235] = {
	false,
	false,
	"white",
	},
	[163520] = {
	true,
	false,
	"deepskyblue",
	},
	[169927] = {
	true,
	false,
	"mediumslateblue",
	},
	[81283] = {
	true,
	false,
	"aqua",
	},
	[169893] = {
	true,
	false,
	"mediumslateblue",
	},
	[82590] = {
	true,
	false,
	"magenta",
	},
	[150165] = {
	true,
	false,
	"aqua",
	},
	[162692] = {
	true,
	false,
	"deepskyblue",
	},
	[165529] = {
	true,
	false,
	"aqua",
	},
	[179841] = {
	true,
	false,
	"aqua",
	},
	[174773] = {
	true,
	false,
	"magenta",
	},
	[165872] = {
	true,
	false,
	"deepskyblue",
	},
	[168717] = {
	true,
	false,
	"deepskyblue",
	},
	[114338] = {
	true,
	false,
	"aqua",
	},
	[170882] = {
	true,
	false,
	"aqua",
	},
	[163458] = {
	true,
	false,
	"aqua",
	},
	[184910] = {
	true,
	false,
	"palegreen",
	},
	[179842] = {
	true,
	false,
	"deepskyblue",
	},
	[164921] = {
	true,
	false,
	"aqua",
	},
	[81297] = {
	true,
	false,
	"deepskyblue",
	},
	[168718] = {
	true,
	false,
	"aqua",
	},
	[115486] = {
	true,
	false,
	"mediumslateblue",
	},
	[115757] = {
	true,
	false,
	"mediumslateblue",
	},
	[179269] = {
	true,
	false,
	"deepskyblue",
	},
	[184911] = {
	true,
	false,
	"darksalmon",
	},
	[160495] = {
	true,
	false,
	"aqua",
	},
	[150295] = {
	true,
	false,
	"mediumslateblue",
	},
	[168942] = {
	true,
	false,
	"deepskyblue",
	},
	[163619] = {
	false,
	false,
	"white",
	},
	[165946] = {
	true,
	false,
	"deepskyblue",
	},
	[154758] = {
	true,
	false,
	"mediumslateblue",
	},
	[114626] = {
	true,
	false,
	"aqua",
	},
	[173016] = {
	true,
	false,
	"aqua",
	},
	[163524] = {
	true,
	false,
	"mediumslateblue",
	},
	[115418] = {
	true,
	false,
	"deepskyblue",
	},
	[176395] = {
	true,
	false,
	"deepskyblue",
	},
	[163620] = {
	true,
	false,
	"deepskyblue",
	},
	[171799] = {
	true,
	false,
	"deepskyblue",
	},
	[150169] = {
	true,
	false,
	"deepskyblue",
	},
	[83389] = {
	true,
	false,
	"deepskyblue",
	},
	[114317] = {
	true,
	false,
	"aqua",
	},
	[120651] = {
	true,
	false,
	"darksalmon",
	},
	[150297] = {
	true,
	false,
	"aqua",
	},
	[177891] = {
	true,
	false,
	"deepskyblue",
	},
	[163621] = {
	true,
	false,
	"deepskyblue",
	},
	[183033] = {
	true,
	false,
	"magenta",
	},
	[178142] = {
	true,
	false,
	"aqua",
	},
	[150712] = {
	true,
	false,
	"aqua",
	},
	[166299] = {
	true,
	false,
	"aqua",
	},
	[150168] = {
	true,
	false,
	"mediumslateblue",
	},
	[168658] = {
	true,
	false,
	"deepskyblue",
	},
	[135246] = {
	false,
	false,
	"white",
	},
	[80808] = {
	true,
	false,
	"deepskyblue",
	},
	[115488] = {
	true,
	false,
	"aqua",
	},
	[184908] = {
	true,
	false,
	"magenta",
	},
	[163618] = {
	true,
	false,
	"deepskyblue",
	},
	[185680] = {
	true,
	false,
	"magenta",
	},
	[167607] = {
	true,
	false,
	"deepskyblue",
	},
	[164929] = {
	true,
	false,
	"deepskyblue",
	},
	[166396] = {
	true,
	false,
	"aqua",
	},
	[168627] = {
	true,
	false,
	"aqua",
	},
	[80936] = {
	false,
	false,
	"magenta",
	},
	[170572] = {
	true,
	false,
	"aqua",
	},
	[114628] = {
	true,
	false,
	"magenta",
	},
	[164185] = {
	true,
	false,
	"deepskyblue",
	},
	[162763] = {
	true,
	false,
	"mediumslateblue",
	},
	[176565] = {
	true,
	false,
	"aqua",
	},
	[162317] = {
	true,
	false,
	"deepskyblue",
	},
	[165919] = {
	true,
	false,
	"deepskyblue",
	},
	[150292] = {
	true,
	false,
	"mediumslateblue",
	},
	[173729] = {
	true,
	false,
	"mediumslateblue",
	},
	[174175] = {
	true,
	false,
	"deepskyblue",
	},
	[166302] = {
	true,
	false,
	"aqua",
	},
	[165824] = {
	true,
	false,
	"mediumslateblue",
	},
	[114804] = {
	true,
	false,
	"aqua",
	},
	[155433] = {
	false,
	false,
	"magenta",
	},
	[81407] = {
	true,
	false,
	"deepskyblue",
	},
	[80937] = {
	true,
	false,
	"deepskyblue",
	},
	[83025] = {
	true,
	false,
	"mediumslateblue",
	},
	[114629] = {
	true,
	false,
	"deepskyblue",
	},
	[185683] = {
	true,
	false,
	"palegreen",
	},
	[169905] = {
	true,
	false,
	"deepskyblue",
	},
	[167536] = {
	true,
	false,
	"deepskyblue",
	},
	[155434] = {
	false,
	false,
	"violet",
	},
	[82579] = {
	true,
	false,
	"deepskyblue",
	},
	[114316] = {
	true,
	false,
	"aqua",
	},
	[163459] = {
	true,
	false,
	"aqua",
	},
	[83392] = {
	true,
	false,
	"mediumslateblue",
	},
	[167111] = {
	true,
	false,
	"deepskyblue",
	},
	[168886] = {
	true,
	false,
	"deepskyblue",
	},
	[77803] = {
	true,
	false,
	"deepskyblue",
	},
	[172265] = {
	true,
	false,
	"aqua",
	},
	[163882] = {
	true,
	false,
	"deepskyblue",
	},
	[80935] = {
	true,
	false,
	"magenta",
	},
	[185685] = {
	true,
	false,
	"darksalmon",
	},
	[105705] = {
	true,
	false,
	"magenta",
	},
	[174210] = {
	true,
	false,
	"aqua",
	},
	[167612] = {
	true,
	false,
	"aqua",
	},
	[179733] = {
	true,
	false,
	"orangered",
	},
	[163086] = {
	true,
	false,
	"deepskyblue",
	},
	[163891] = {
	true,
	false,
	"aqua",
	},
	[81603] = {
	true,
	false,
	"mediumslateblue",
	},
	[165222] = {
	true,
	false,
	"aqua",
	},
	[165764] = {
	true,
	false,
	"mediumslateblue",
	},
	[164266] = {
	true,
	false,
	"deepskyblue",
	},
	[114790] = {
	true,
	false,
	"mediumslateblue",
	},
	[114624] = {
	true,
	false,
	"aqua",
	},
	[114312] = {
	true,
	false,
	"mediumslateblue",
	},
	[165414] = {
	true,
	false,
	"aqua",
	},
	[150146] = {
	true,
	false,
	"aqua",
	},
	[171343] = {
	true,
	false,
	"deepskyblue",
	},
	[166275] = {
	true,
	false,
	"aqua",
	},
	[173447] = {
	false,
	false,
	"white",
	},
	[183424] = {
	true,
	false,
	"aqua",
	},
	[178165] = {
	true,
	false,
	"mediumslateblue",
	},
	[178133] = {
	false,
	false,
	"aqua",
	},
	[167965] = {
	true,
	false,
	"aqua",
	},
	[82597] = {
	true,
	false,
	"mediumslateblue",
	},
	[165762] = {
	true,
	false,
	"deepskyblue",
	},
	[166276] = {
	true,
	false,
	"deepskyblue",
	},
	[151773] = {
	true,
	false,
	"deepskyblue",
	},
	[183425] = {
	true,
	false,
	"deepskyblue",
	},
	[168396] = {
	true,
	false,
	"deepskyblue",
	},
	[150276] = {
	true,
	false,
	"deepskyblue",
	},
	[163121] = {
	true,
	false,
	"deepskyblue",
	},
	[167998] = {
	true,
	false,
	"deepskyblue",
	},
	[83761] = {
	true,
	false,
	"mediumslateblue",
	},
	[168572] = {
	true,
	false,
	"deepskyblue",
	},
	[163157] = {
	true,
	false,
	"deepskyblue",
	},
	[177816] = {
	true,
	false,
	"deepskyblue",
	},
	[162038] = {
	true,
	false,
	"deepskyblue",
	},
	[171376] = {
	true,
	false,
	"deepskyblue",
	},
	[168443] = {
	true,
	false,
	"deepskyblue",
	},
	[155090] = {
	true,
	false,
	"deepskyblue",
	},
	[168446] = {
	true,
	false,
	"mediumslateblue",
	},
	[168318] = {
	true,
	false,
	"deepskyblue",
	},
	[180335] = {
	true,
	false,
	"deepskyblue",
	},
	[114792] = {
	true,
	false,
	"aqua",
	},
	[162039] = {
	true,
	false,
	"aqua",
	},
	[180431] = {
	true,
	false,
	"aqua",
	},
	[162103] = {
	true,
	false,
	"deepskyblue",
	},
	[83613] = {
	true,
	false,
	"mediumslateblue",
	},
	[81212] = {
	true,
	false,
	"deepskyblue",
	},
	[114633] = {
	true,
	false,
	"deepskyblue",
	},
	[180336] = {
	true,
	false,
	"aqua",
	},
	[77483] = {
	true,
	false,
	"deepskyblue",
	},
	[162040] = {
	true,
	false,
	"deepskyblue",
	},
	[178392] = {
	true,
	false,
	"deepskyblue",
	},
	[151649] = {
	true,
	false,
	"deepskyblue",
	},
	[81236] = {
	true,
	false,
	"aqua",
	},
	[115765] = {
	true,
	false,
	"deepskyblue",
	},
	[114632] = {
	true,
	false,
	"aqua",
	},
	[177787] = {
	true,
	false,
	"aqua",
	},
	[164557] = {
	true,
	false,
	"deepskyblue",
	},
	[177817] = {
	true,
	false,
	"aqua",
	},
	[180433] = {
	true,
	false,
	"orangered",
	},
	[83578] = {
	true,
	false,
	"mediumslateblue",
	},
	[165197] = {
	true,
	false,
	"mediumslateblue",
	},
	[83763] = {
	true,
	false,
	"deepskyblue",
	},
	[114634] = {
	true,
	false,
	"mediumslateblue",
	},
	[172981] = {
	true,
	false,
	"deepskyblue",
	},
	[164510] = {
	true,
	false,
	"deepskyblue",
	},
	[164414] = {
	true,
	false,
	"aqua",
	},
	[179821] = {
	true,
	false,
	"mediumslateblue",
	},
	[163126] = {
	true,
	false,
	"aqua",
	},
	[167493] = {
	true,
	false,
	"aqua",
	},
	[83026] = {
	true,
	false,
	"mediumslateblue",
	},
	[161895] = {
	true,
	false,
	"magenta",
	},
	[162744] = {
	true,
	false,
	"deepskyblue",
	},
	[167876] = {
	true,
	false,
	"deepskyblue",
	},
	[168418] = {
	true,
	false,
	"aqua",
	},
	[170490] = {
	true,
	false,
	"aqua",
	},
	[168992] = {
	true,
	false,
	"aqua",
	},
	[154744] = {
	true,
	false,
	"mediumslateblue",
	},
	[166589] = {
	true,
	false,
	"deepskyblue",
	},
	[168578] = {
	true,
	false,
	"aqua",
	},
	[150250] = {
	true,
	false,
	"deepskyblue",
	},
	[164562] = {
	true,
	false,
	"deepskyblue",
	},
	[88163] = {
	true,
	false,
	"mediumslateblue",
	},
	[178141] = {
	true,
	false,
	"deepskyblue",
	},
	[163128] = {
	true,
	false,
	"aqua",
	},
	[80816] = {
	true,
	false,
	"aqua",
	},
	[144295] = {
	true,
	false,
	"aqua",
	},
	[179334] = {
	true,
	false,
	"mediumslateblue",
	},
	[150251] = {
	true,
	false,
	"aqua",
	},
	[146409] = {
	false,
	false,
	"darkgreen",
	},
	[168420] = {
	true,
	false,
	"aqua",
	},
	[165137] = {
	true,
	false,
	"deepskyblue",
	},
	[163894] = {
	true,
	false,
	"deepskyblue",
	},
	[163862] = {
	true,
	false,
	"deepskyblue",
	},
	[83765] = {
	true,
	false,
	"aqua",
	},
	[114636] = {
	true,
	false,
	"deepskyblue",
	},
	[168357] = {
	true,
	false,
	"aqua",
	},
	[169861] = {
	true,
	false,
	"deepskyblue",
	},
	[179386] = {
	true,
	false,
	"deepskyblue",
	},
	[162689] = {
	true,
	false,
	"deepskyblue",
	},
	[177889] = {
	true,
	false,
	"mediumslateblue",
	},
	[150160] = {
	true,
	false,
	"mediumslateblue",
	},
	},
	["transparency_behavior_on_friendlies"] = true,
	["extra_icon_show_enrage_border"] = {
	0,
	0,
	0,
	},
	["hook_data"] = {
	{
	["Enabled"] = true,
	["Revision"] = 65,
	["Options"] = {
	},
	["LastHookEdited"] = "",
	["Author"] = "Izimode-Azralon",
	["OptionsValues"] = {
	},
	["Desc"] = "Change the color for the heal absorb, heal prediction and shield amount indicators.",
	["Hooks"] = {
	["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --heal absorb\n    unitFrame.healthBar.healAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.HealAbsorbColor))\n    \n    --shield absorb\n    unitFrame.healthBar.shieldAbsorbIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldsColor))\n    \n    --incoming heal\n    unitFrame.healthBar.incomingHealIndicator:SetVertexColor (DetailsFramework:ParseColors (envTable.IncomingHealColor))\n    \nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}           \n    \n    --make sure to enable the desired indicators at /plater options > Advanced tab > Show Heal/Shield Prediction\n    \n    --color when the heal absorb indicator\n    envTable.HealAbsorbColor = \"maroon\"\n    \n    --color of incoming heal indicator\n    envTable.IncomingHealColor = \"darkgreen\"\n    \n    --color of shield indicator\n    envTable.ShieldsColor = \"#C59000\"    \n    \nend\n\n\n",
	},
	["Prio"] = 99,
	["Name"] = "Change Prediction Color",
	["PlaterCore"] = 1,
	["HooksTemp"] = {
	},
	["Time"] = 1598973126,
	["Icon"] = 1035048,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	},
	{
	["Enabled"] = true,
	["Revision"] = 66,
	["Options"] = {
	},
	["LastHookEdited"] = "",
	["Author"] = "Izimode-Azralon",
	["OptionsValues"] = {
	},
	["Desc"] = "Adds a pixels perfect border around the cast bar.",
	["Hooks"] = {
	["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
	["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
	["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
	},
	["Prio"] = 99,
	["Name"] = "Cast Bar Border",
	["PlaterCore"] = 1,
	["HooksTemp"] = {
	},
	["Time"] = 1645291542,
	["Icon"] = 133004,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	},
	{
	["Enabled"] = true,
	["Revision"] = 54,
	["Options"] = {
	},
	["LastHookEdited"] = "",
	["Author"] = "Izimode-Azralon",
	["OptionsValues"] = {
	},
	["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
	["Hooks"] = {
	["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
	["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
	["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"right\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\")\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\")\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
	},
	["Prio"] = 99,
	["Name"] = "Cast Icon Border",
	["PlaterCore"] = 1,
	["HooksTemp"] = {
	},
	["Time"] = 1645291656,
	["Icon"] = 133004,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	},
	{
	["OptionsValues"] = {
	},
	["HooksTemp"] = {
	},
	["Hooks"] = {
	["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateRaidMark (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --normal Marker\n    envTable.Size = 18\n    envTable.Anchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 0,\n    }\n    \n    --Name only Marker\n    envTable.SpecialSize = 22\n    envTable.SpecialAnchor = {\n        side = 8, -- Right side\n        x = -2, \n        y = 2,\n    }\n    \n    envTable.UpdateRaidMark = function (unitFrame, unitId)\n        local plateFrame = C_NamePlate.GetNamePlateForUnit (unitId)\n        local marker = plateFrame.unitFrame.PlaterRaidTargetFrame\n        if marker then\n            if plateFrame.IsFriendlyPlayerWithoutHealthBar or\n            plateFrame.IsNpcWithoutHealthBar then\n                marker:SetSize (envTable.SpecialSize, envTable.SpecialSize)\n                Plater.SetAnchor (marker, envTable.SpecialAnchor, unitFrame.ActorNameSpecial)\n            else\n                --marker:SetSize (envTable.Size, envTable.Size)\n                --Plater.SetAnchor (marker, envTable.Anchor, unitFrame.unitName)\n            end\n        end\n    end\n    \nend",
	},
	["Time"] = 1604708800,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "",
	["Icon"] = 878218,
	["Enabled"] = true,
	["Revision"] = 650,
	["semver"] = "",
	["Author"] = "호불-아즈샤라",
	["Desc"] = "Raidmark in the Unitname",
	["Prio"] = 99,
	["version"] = -1,
	["PlaterCore"] = 1,
	["Options"] = {
	},
	["LastHookEdited"] = "",
	["Name"] = "Raidmark in the Unitname",
	},
	{
	["OptionsValues"] = {
	},
	["HooksTemp"] = {
	},
	["Hooks"] = {
	["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend",
	["Player Logon"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\Addons\\SharedMedia_Naowh\\textures\\arrow_glow.tga]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 16,\n        y = 0,\n        blend = \"ADD\",\n        color = \"#ffffff\",\n    }    \n    \nend",
	["Initialization"] = "function (modTable)\n    --insert code here\n    \nend",
	["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend",
	},
	["Time"] = 1689571447,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "https://wago.io/4zFNU4AvR/1",
	["Icon"] = 236174,
	["Enabled"] = true,
	["Revision"] = 155,
	["semver"] = "1.0.0",
	["Author"] = " r  ne-Kel'thuzad",
	["Desc"] = "Adds double arrow as a target indicators option",
	["Prio"] = 99,
	["version"] = 1,
	["PlaterCore"] = 1,
	["Options"] = {
	{
	["Type"] = 1,
	["Key"] = "option1",
	["Value"] = {
	0.38823529411765,
	0.83137254901961,
	1,
	1,
	},
	["Name"] = "Option 1",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	},
	["LastHookEdited"] = "Player Logon",
	["Name"] = "Naowh Arrow Target",
	},
	{
	["OptionsValues"] = {
	},
	["HooksTemp"] = {
	},
	["Hooks"] = {
	["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    local mark = unitId and GetRaidTargetIndex(unitId)\n    envTable.namer(unitId, mark, true, false, false, \"Created\")\n    \nend",
	["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    -- Catch all \n    envTable.namer(unitId, GetRaidTargetIndex(unitId), true, false, false, \"Updated\")\n    \nend\n\n\n",
	["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    envTable.namer(unitId, GetRaidTargetIndex(unitId), true, false, false, \"Added\")\n    \nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    -- Old way was some degen fucking shit this is easier\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,  \n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true, \n        [\"Terror\"] = true, \n        [\"Totem\"] = true, \n        [\"Waycrest\"] = true,\n        [\"Dummy\"] = true, -- Testing Purposes\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- Override for names, Thanks to Nnoggie for all of the dungeon ones\n    local renameTable = {\n        -- Testing\n        [\"Fleshripper Vulture\"] = \"Shit Bird\",\n        [\"Roaming Nibbler\"] = \"Roaming Saurid\",\n        -- Grand Delusions\n        [\"Thing From Beyond\"] = \"Ion Hazzikostas\",\n        -- Plaguefall\n        [\"Plagueroc\"] = \"Plaguecock\",\n        [\"Doctor Ickus\"] = \"Dickus\",\n        -- Sanguine Depths\n        [\"Animated Weapon\"] = \"Assclapper\",\n        [\"Kryxis the Voracious\"] = \"Steroid Stomper\",\n        [\"Frenzied Ghoul\"] = \"Death\",\n        [\"General Kaal\"] = \"Daddy Kaal\",\n        -- Mists of Tirna Scithe\n        [\"Droman Oulfarran\"] = \"Simp Tree\",\n        [\"Mistcaller\"] = \"Lady UwU\",\n        [\"Tred'ova\"] = \"Tred'killya\",\n        -- M+ Encrypted Affix\n        [\"Urh Relic\"] = \"CDR Relic\",\n        [\"Wo Relic\"] = \"Speed Relic\",\n        [\"Vy Relic\"] = \"Haste Relic\",\n        [\"Urh Dismantler\"] = \"CDR boi\",\n        [\"Wo Drifter\"] = \"Speed boi\",\n        [\"Vy Interceptor\"] = \"Haste boi\",\n        -- Pantheon\n        [\"Prototype of War\"] = \"Caster man\",\n        [\"Prototype of Duty\"] = \"Tank nuke\",\n        [\"Prototype of Renewal\"] = \"Caster lady\",\n        [\"Prototype of Absolution\"] = \"Frontal boi\",\n    }\n    \n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    -- @marker Raid Target ID\n    -- @nameColouring Enables text to be coloured by raid marker \n    -- @isBoss Boolean for enabling this on boss mobs, Do i want this?? no idea\n    -- @debugMode Test mode for using dummy's\n    -- @debugEntry Which hook it came from\n    function envTable.namer(unitId, marker, nameColouring, isBoss, debugMode, debugEntry)\n        if unitId then\n            \n            local name = UnitName(unitId)\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            local unitName\n            -- Testing mode\n            if debugMode then\n                print(\"DebugMode: \"..debugEntry..\" - Checking for dummy name\")\n                if b == \"Dummy\" or c == \"Dummy\" or d == \"Dummy\" or e == \"Dummy\" or f == \"Dummy\" then\n                    local lastName = b:find(\"Dummy\") and b or c:find(\"Dummy\") and c or d:find(\"Dummy\") and d\n                    print(\"DebugMode: \"..debugEntry..\" - Dummy Found!\")\n                    unitName = name ~=nil and lastName\n                end\n            end\n            \n            \n            if nameBlacklist[b] then\n                unitName = name ~=nil and (a or b or c or d or e or f) or nil\n            else\n                unitName = name ~=nil and (f or e or d or c or b or a) or ni\n            end\n            \n            if unitId and marker == nil and nameColouring then\n                marker = 8\n            end\n            \n            \n            \n            if unitName == nil then\n                unitName = name\n            end\n            \n            \n            if renameTable[name] then\n                unitName = renameTable[name]\n            end\n            \n            if unitId and marker and nameColouring then\n                unitFrame.healthBar.unitName:SetText(WrapTextInColorCode(unitName, markerToHex[marker]))\n            elseif unitId then\n                unitFrame.healthBar.unitName:SetText(unitName)\n            end\n        end   \n    end\nend",
	},
	["Time"] = 1646989646,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "",
	["Icon"] = 629482,
	["Enabled"] = true,
	["Revision"] = 108,
	["semver"] = "",
	["Author"] = "Rhk-Tarren Mill",
	["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
	["Prio"] = 99,
	["version"] = -1,
	["PlaterCore"] = 1,
	["Options"] = {
	},
	["LastHookEdited"] = "Constructor",
	["Name"] = "M+ Renamer",
	},
	{
	["OptionsValues"] = {
	},
	["LastHookEdited"] = "",
	["Hooks"] = {
	["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
	["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
	["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
	["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
	["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
	["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
	},
	["Time"] = 1621935143,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	["Enabled"] = true,
	["DRUID"] = true,
	["ROGUE"] = true,
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	["103"] = true,
	["Enabled"] = true,
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "",
	["Icon"] = 135426,
	["Enabled"] = false,
	["Revision"] = 284,
	["semver"] = "",
	["Author"] = "Izimode-Azralon",
	["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
	["version"] = -1,
	["PlaterCore"] = 1,
	["Options"] = {
	},
	["HooksTemp"] = {
	},
	["Name"] = "Combo Points [Plater]",
	},
	{
	["OptionsValues"] = {
	},
	["LastHookEdited"] = "",
	["Hooks"] = {
	["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	},
	["Time"] = 1608663128,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
	["Enabled"] = false,
	["Revision"] = 356,
	["semver"] = "",
	["Author"] = "Ditador-Azralon",
	["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
	["version"] = -1,
	["PlaterCore"] = 1,
	["Options"] = {
	},
	["HooksTemp"] = {
	},
	["Name"] = "Aura Reorder [Plater]",
	},
	{
	["OptionsValues"] = {
	},
	["HooksTemp"] = {
	},
	["Hooks"] = {
	["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
	["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
	["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
	["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 12\n    envTable.Anchor = {\n        side = 6, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
	},
	["Time"] = 1616360153,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "https://wago.io/platerquesticon/2",
	["Icon"] = "Interface\\OptionsFrame\\UI-OptionsFrame-NewFeatureIcon",
	["Enabled"] = true,
	["Revision"] = 40,
	["semver"] = "1.0.1",
	["Author"] = "Izimode-Azralon",
	["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing. You may adjust where the exclamation mark is shown in the Constructor.",
	["Prio"] = 99,
	["version"] = 2,
	["PlaterCore"] = 1,
	["Options"] = {
	},
	["LastHookEdited"] = "Constructor",
	["Name"] = "Extra Quest Icon",
	},
	{
	["OptionsValues"] = {
	},
	["HooksTemp"] = {
	},
	["Hooks"] = {
	["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
	["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
	},
	["Time"] = 1645291687,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "",
	["Icon"] = -4972,
	["Enabled"] = true,
	["Revision"] = 368,
	["semver"] = "",
	["Author"] = "Kastfall-Azralon",
	["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
	["Prio"] = 99,
	["version"] = -1,
	["PlaterCore"] = 1,
	["Options"] = {
	{
	["Type"] = 1,
	["Key"] = "color",
	["Value"] = {
	0.50196078431373,
	0.50196078431373,
	0,
	1,
	},
	["Name"] = "Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "changeBarColor",
	["Value"] = true,
	["Name"] = "Change Bar Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "changeBorderColor",
	["Value"] = false,
	["Name"] = "Change Border Color",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	{
	["Type"] = 4,
	["Key"] = "resetColors",
	["Value"] = true,
	["Name"] = "Reset Colors",
	["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
	["Desc"] = "",
	},
	},
	["LastHookEdited"] = "Initialization",
	["Name"] = "Attacking Specific Unit [Plater]",
	},
	{
	["OptionsValues"] = {
	},
	["HooksTemp"] = {
	},
	["Hooks"] = {
	["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsVisible()) then\n                if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                    \n                elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                    \n                else\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                end \n            end\n            \n        end\n    end\n    \n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() then\n            if (auraIcon:IsVisible()) then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (remainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.critical)\n                    \n                elseif (remainingTime < envTable.Timers.warning) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.warning)\n                    \n                else\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.okay)\n                end\n            end\n        end\n    end\n    \nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"#b3ff00\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
	},
	["Time"] = 1645645058,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "https://wago.io/CjOSTakvH/1",
	["Icon"] = 629539,
	["Enabled"] = false,
	["Revision"] = 62,
	["semver"] = "1.0.0",
	["Author"] = "Ditador-Azralon",
	["Desc"] = "Change the color of the aura timer by it's time left",
	["Prio"] = 99,
	["version"] = 1,
	["PlaterCore"] = 1,
	["Options"] = {
	},
	["LastHookEdited"] = "Nameplate Updated",
	["Name"] = "Paint Aura Timers - v2",
	},
	{
	["LastHookEdited"] = "Constructor",
	["Hooks"] = {
	["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
	["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	},
	["Time"] = 1645295003,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "https://wago.io/P35nCfDqx/1",
	["Icon"] = -5173,
	["Enabled"] = false,
	["Revision"] = 61,
	["Options"] = {
	},
	["Author"] = "Kastfall-Azralon",
	["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
	["Prio"] = 99,
	["version"] = 1,
	["PlaterCore"] = 1,
	["HooksTemp"] = {
	},
	["semver"] = "1.0.0",
	["Name"] = "Force Threat Color NPC",
	},
	{
	["OptionsValues"] = {
	},
	["HooksTemp"] = {
	},
	["Hooks"] = {
	["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
	["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            --does the target name exists?\n            if (targetName) then\n                --get the current spell name\n                local spellName = castBar.SpellName\n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText()\n                if (currentText ~= nil and currentText ~= '') then \n                    castBar.Text:SetText(currentText .. \" ( \" .. targetNameByColor .. \"]\")\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth)    \n                end                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
	},
	["Time"] = 1645555070,
	["LoadConditions"] = {
	["talent"] = {
	},
	["group"] = {
	},
	["class"] = {
	},
	["map_ids"] = {
	},
	["role"] = {
	},
	["pvptalent"] = {
	},
	["spec"] = {
	},
	["race"] = {
	},
	["encounter_ids"] = {
	},
	["affix"] = {
	},
	},
	["url"] = "https://wago.io/VOuCDrV8Y/1",
	["Icon"] = 2126355,
	["Enabled"] = true,
	["Revision"] = 61,
	["semver"] = "1.0.0",
	["Author"] = "Izimode-Azralon",
	["Desc"] = "Show the cast target name with the spell name",
	["Prio"] = 99,
	["version"] = 1,
	["PlaterCore"] = 1,
	["Options"] = {
	},
	["LastHookEdited"] = "Constructor",
	["Name"] = "Cast Target on Spell Name",
	},
	},
	["auras_per_row_auto"] = false,
	["auras_per_row_amount2"] = 4,
	["aura_width"] = 22,
	["health_statusbar_bgcolor"] = {
	0.12941176470588,
	0.12941176470588,
	0.12941176470588,
	1,
	},
	["buff_frame_anchor_and_size_migrated"] = true,
	["pet_width_scale"] = 0.9999999403953552,
	["aura_stack_color"] = {
	nil,
	0.94509803921569,
	0.93725490196078,
	},
	["target_highlight_color"] = {
	1,
	1,
	},
	["extra_icon_stack_outline"] = "MONOCHROME",
	["resources"] = {
	["y_offset_target"] = 20,
	["y_offset_target_withauras"] = 32,
	},
	["castbar_target_font"] = "Naowh",
	["ui_parent_cast_level"] = 1,
	["ghost_auras"] = {
	["auras"] = {
	["WARLOCK"] = {
	{
	[980] = true,
	[172] = true,
	},
	},
	},
	},
	["ui_parent_buff2_level"] = 1,
	["range_check_in_range_or_target_alpha_friendlies"] = 1,
	["cast_statusbar_fadeout_time"] = 0.3999999761581421,
	["aura_cooldown_reverse"] = false,
	["health_animation_time_dilatation"] = 1.059999942779541,
	["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark4",
	["first_run2"] = true,
	["cast_statusbar_bgcolor"] = {
	0.098039215686275,
	0.098039215686275,
	0.098039215686275,
	0.60887169837952,
	},
	["indicator_raidmark_scale"] = 0.9899999499320984,
	["pet_height_scale"] = 0.9999999403953552,
	["aura_x_offset"] = 0.8699951171875,
	["first_run3"] = true,
	["aura_stack_anchor"] = {
	["y"] = -4.600000381469727,
	},
	["extra_icon_use_blizzard_border_color"] = false,
	["ui_parent_scale_tune"] = 1.409999847412109,
	["healthbar_framelevel"] = 0,
	["ui_parent_buff_level"] = 1,
	["health_statusbar_bgtexture"] = "Melli",
	["indicator_raidmark_anchor"] = {
	["y"] = 2,
	["x"] = 0,
	["side"] = 9,
	},
	["tank"] = {
	["colors"] = {
	["anothertank"] = {
	0.73333333333333,
	0.19607843137255,
	},
	["aggro"] = {
	0.38039215686275,
	0.87450980392157,
	0.23137254901961,
	},
	["nocombat"] = {
	0.99607843137255,
	0.29803921568627,
	0.30980392156863,
	},
	["noaggro"] = {
	0.99607843137255,
	0.29803921568627,
	0.30980392156863,
	},
	["pulling"] = {
	nil,
	0.93333333333333,
	0.43137254901961,
	},
	},
	},
	["aura_tracker"] = {
	["buff_banned"] = {
	["206150"] = true,
	["333553"] = true,
	["61574"] = true,
	["61573"] = true,
	},
	["debuff_banned"] = {
	["264263"] = true,
	["50536"] = false,
	["339137"] = true,
	["51735"] = false,
	},
	["debuff_tracked"] = {
	["336449"] = true,
	["328175"] = true,
	["321020"] = true,
	},
	["buff_tracked"] = {
	["227931"] = true,
	["327808"] = true,
	["328175"] = true,
	["262092"] = true,
	["226512"] = true,
	["333737"] = true,
	["297133"] = true,
	["331743"] = true,
	["273432"] = true,
	["321764"] = true,
	["163689"] = true,
	["233210"] = true,
	["209859"] = true,
	},
	},
	["cast_statusbar_color"] = {
	nil,
	0.93333333333333,
	0.43137254901961,
	0.96000000089407,
	},
	["update_throttle"] = 0.12000000476837,
	["aura_timer_text_font"] = "Naowh",
	["castbar_icon_show"] = false,
	["indicator_extra_raidmark"] = false,
	["extra_icon_timer_font"] = "GothamNarrowUltra",
	["not_affecting_combat_alpha"] = 1,
	["target_highlight_alpha"] = 0.7999999523162842,
	["news_frame"] = {
	["PlaterNewsFrame"] = {
	["scale"] = 1,
	},
	},
	["extra_icon_show_offensive_border"] = {
	nil,
	0,
	0,
	},
	["auto_toggle_stacking_enabled"] = true,
	["target_shady_combat_only"] = false,
	["target_shady_alpha"] = 0.59999996423721,
	["click_space_friendly"] = {
	50,
	1,
	},
	["tap_denied_color"] = {
	0.37254901960784,
	0.37254901960784,
	0.37254901960784,
	},
	["target_highlight_height"] = 12,
	["cast_statusbar_fadein_time"] = 0.019999999552965,
	["cast_statusbar_spark_alpha"] = 0.7999999523162842,
	["version"] = 2,
	["castbar_framelevel"] = 0,
	["indicator_spec"] = false,
	["color_override_colors"] = {
	[3] = {
	0.99607843137255,
	0.29803921568627,
	0.30980392156863,
	},
	[4] = {
	1,
	0.93333333333333,
	0.43137254901961,
	},
	[5] = {
	0.38039215686275,
	0.87450980392157,
	0.23137254901961,
	},
	},
	["patch_version"] = 36,
	["range_check_in_range_or_target_alpha"] = 1,
	["aura_timer_text_size"] = 9,
	["health_cutoff"] = false,
	["number_region_first_run"] = true,
	["castbar_target_anchor"] = {
	["y"] = 8.349998474121094,
	["x"] = 24.72999572753906,
	["side"] = 6,
	},
	["script_auto_imported"] = {
	["Relics 9.2 M Dungeons"] = 2,
	["Cast - Effect After Cast [P]"] = 2,
	["Cast - Circular Swipe"] = 4,
	["Aura - Debuff Alert"] = 12,
	["Cast - Castbar is Timer [P]"] = 2,
	["Cast - Ultra Important"] = 14,
	["Add - Health Markers [P]"] = 2,
	["Cast - Small Alert"] = 12,
	["Aura - Invalidate Unit"] = 1,
	["Add - Important [P]"] = 4,
	["Unit - Main Target"] = 11,
	["Aura - Blink Time Left"] = 13,
	["Add - Tag Number [P]"] = 2,
	["Unit Power"] = 1,
	["Cast - Tank Interrupt"] = 12,
	["Cast - Important Target [P]"] = 2,
	["Unit - Show Energy"] = 11,
	["Cast - Shield Interrupt"] = 2,
	["Cast - Alert + Timer [P]"] = 4,
	["Cast - Glowing [P]"] = 10,
	["Unit - Health Markers"] = 12,
	["Aura is Shield [P]"] = 2,
	["Add - Warning [P]"] = 5,
	["Explosion Affix M+"] = 14,
	["Aura While Casting [P]"] = 1,
	["Cast - Big Alert"] = 14,
	["Fixate"] = 11,
	["Cast - On Going Cast [P]"] = 2,
	["Color Change"] = 1,
	["Countdown"] = 11,
	["Auto Set Skull"] = 11,
	["Spiteful Affix"] = 3,
	["Add - Non Elite Trash [P]"] = 4,
	["Cast - Quick Flash"] = 2,
	["Aura Border Color"] = 1,
	["Cast - Stop Casting"] = 4,
	["Fixate by Unit Buff [P]"] = 2,
	["Cast - Frontal Cone"] = 15,
	["Add - Explode on Die [P]"] = 1,
	["Unit - Important"] = 11,
	["Aura - Buff Alert"] = 15,
	["Cast - Very Important"] = 15,
	["Fixate On You"] = 11,
	},
	["aura2_grow_direction"] = 3,
	["aura_alpha"] = 1,
	["aura_height_personal"] = 19,
	["indicator_faction"] = false,
	["extra_icon_height"] = 26,
	["range_check_alpha_friendlies"] = 1,
	["aura_show_enrage"] = true,
	["dps"] = {
	["colors"] = {
	["aggro"] = {
	0.99607843137255,
	0.29803921568627,
	0.30980392156863,
	},
	["notontank"] = {
	0.99607843137255,
	0.29803921568627,
	0.30980392156863,
	},
	["noaggro"] = {
	0.73333333333333,
	0.19607843137255,
	},
	["pulling"] = {
	nil,
	0.93333333333333,
	0.43137254901961,
	},
	},
	},
	["extra_icon_show_purge_border"] = {
	nil,
	0,
	0,
	},
	["ui_parent_target_strata"] = "BACKGROUND",
	["extra_icon_show_defensive_border"] = {
	0,
	0,
	0,
	},
	["auto_toggle_stacking"] = {
	["cities"] = true,
	},
	["cast_statusbar_spark_width"] = 4,
}